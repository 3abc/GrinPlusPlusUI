{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"electron\"","webpack:///external \"@material-ui/core\"","webpack:///external \"electron-log\"","webpack:///external \"prop-types\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/core/Grid\"","webpack:///external \"react-router-dom\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"react-material-ui-form-validator\"","webpack:///external \"@material-ui/core/DialogContent\"","webpack:///external \"@material-ui/core/IconButton\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@material-ui/core/DialogActions\"","webpack:///external \"@material-ui/core/styles/withStyles\"","webpack:///external \"@material-ui/core/Dialog\"","webpack:///external \"@material-ui/core/DialogTitle\"","webpack:///external \"@material-ui/icons/Refresh\"","webpack:///external \"@material-ui/core/DialogContentText\"","webpack:///external \"@material-ui/core/Avatar\"","webpack:///external \"@material-ui/icons/CallReceived\"","webpack:///external \"@material-ui/core/colors\"","webpack:///external \"@material-ui/core/Paper\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///external \"@material-ui/core/CssBaseline\"","webpack:///external \"@material-ui/core/Toolbar\"","webpack:///external \"@material-ui/core/FormControlLabel\"","webpack:///external \"@material-ui/icons/FileCopy\"","webpack:///external \"@material-ui/core/FormControl\"","webpack:///external \"@material-ui/icons/Info\"","webpack:///external \"@material-ui/core/colors/green\"","webpack:///external \"@material-ui/core/Snackbar\"","webpack:///external \"@material-ui/core/\"","webpack:///external \"@material-ui/core/TableCell\"","webpack:///external \"@material-ui/core/AppBar\"","webpack:///external \"classnames\"","webpack:///external \"@material-ui/core/TextField\"","webpack:///external \"@material-ui/icons/CallMade\"","webpack:///external \"@material-ui/core/Fab\"","webpack:///external \"@material-ui/core/Radio\"","webpack:///external \"electron-unhandled\"","webpack:///external \"@material-ui/core/Switch\"","webpack:///external \"@material-ui/icons/CheckCircle\"","webpack:///external \"@material-ui/icons/Error\"","webpack:///external \"@material-ui/icons/Close\"","webpack:///external \"@material-ui/core/colors/amber\"","webpack:///external \"@material-ui/icons/Warning\"","webpack:///external \"@material-ui/core/Divider\"","webpack:///external \"@material-ui/core/Input\"","webpack:///external \"@material-ui/core/InputLabel\"","webpack:///external \"@material-ui/icons/Cancel\"","webpack:///external \"@material-ui/core/TableRow\"","webpack:///external \"@material-ui/core/Menu\"","webpack:///external \"@material-ui/core/MenuItem\"","webpack:///external \"react-dom\"","webpack:///external \"react-hot-loader\"","webpack:///external \"@babel/runtime/helpers/objectSpread\"","webpack:///external \"@material-ui/icons/Menu\"","webpack:///external \"@material-ui/icons/Settings\"","webpack:///external \"@material-ui/icons/ContactSupport\"","webpack:///external \"@material-ui/icons/ArrowBack\"","webpack:///external \"@material-ui/icons/AccountBalanceWallet\"","webpack:///external \"@material-ui/icons/PermIdentity\"","webpack:///external \"@material-ui/icons/PowerSettingsNew\"","webpack:///external \"@material-ui/icons/ChevronLeft\"","webpack:///external \"@material-ui/core/CircularProgress\"","webpack:///external \"@material-ui/icons/Send\"","webpack:///external \"@material-ui/core/SnackbarContent\"","webpack:///external \"@material-ui/icons/SaveAlt\"","webpack:///external \"@material-ui/core/RadioGroup\"","webpack:///external \"@material-ui/icons/FolderOpen\"","webpack:///external \"@material-ui/icons/CallMerge\"","webpack:///external \"@material-ui/core/colors/blue\"","webpack:///external \"@material-ui/core/Table\"","webpack:///external \"@material-ui/core/TableBody\"","webpack:///external \"@material-ui/core/TableHead\"","webpack:///external \"@material-ui/core/TableSortLabel\"","webpack:///external \"@material-ui/icons/Lens\"","webpack:///./src/renderer/RenderApp.js","webpack:///external \"@material-ui/icons/ChevronRight\"","webpack:///external \"path\"","webpack:///external \"compressjs\"","webpack:///external \"clsx\"","webpack:///external \"@material-ui/core/Checkbox\"","webpack:///external \"@material-ui/core/Tooltip\"","webpack:///external \"@material-ui/icons/Delete\"","webpack:///external \"@material-ui/icons/FilterList\"","webpack:///./src/renderer/util/ScrollTop.js","webpack:///./src/renderer/components/GrinDialog/GrinDialog.js","webpack:///./src/renderer/components/GrinDialog/index.js","webpack:///./src/renderer/components/Settings/SettingsModal.js","webpack:///./src/renderer/components/Settings/index.js","webpack:///./src/renderer/components/CustomTextField/CustomTextField.js","webpack:///./src/renderer/components/CustomTextField/index.js","webpack:///./src/renderer/components/Modals/SupportModal/SupportModal.js","webpack:///./src/renderer/components/Modals/SupportModal/index.js","webpack:///./src/renderer/components/UserMenu/ImageAvatar.js","webpack:///./src/renderer/components/UserMenu/UserMenu.js","webpack:///./src/renderer/components/UserMenu/index.js","webpack:///./src/renderer/components/ButtonAppNav/ButtonAppNav.js","webpack:///./src/renderer/components/ButtonAppNav/index.js","webpack:///./src/renderer/components/SideMenu/SideMenu.js","webpack:///./src/renderer/components/SideMenu/index.js","webpack:///./src/renderer/containers/Login/Login.js","webpack:///./src/renderer/containers/Login/index.js","webpack:///./src/renderer/containers/Register/WalletWords/WalletWords.js","webpack:///./src/renderer/containers/Register/WalletWords/index.js","webpack:///./src/renderer/containers/Register/Register.js","webpack:///./src/renderer/containers/Register/index.js","webpack:///./src/renderer/containers/Restore/Restore.js","webpack:///./src/renderer/containers/Restore/index.js","webpack:///./src/renderer/containers/Main/Main.js","webpack:///./src/renderer/containers/Main/index.js","webpack:///./src/renderer/components/CustomSnackbarContent/CustomSnackbarContent.js","webpack:///./src/renderer/components/CustomSnackbarContent/index.js","webpack:///./src/renderer/util/GrinUtil.js","webpack:///./src/renderer/components/Modals/SendModal/SendFile/SendFile.js","webpack:///./src/renderer/components/Modals/SendModal/SendFile/index.js","webpack:///./src/renderer/components/Modals/SendModal/SendHttp/SendHttp.js","webpack:///./src/renderer/components/Modals/SendModal/SendHttp/index.js","webpack:///./src/renderer/components/Modals/SendModal/SendGrinbox/SendGrinbox.js","webpack:///./src/renderer/components/Modals/SendModal/SendGrinbox/index.js","webpack:///./src/renderer/components/Modals/SendModal/SendModal.js","webpack:///./src/renderer/components/Modals/SendModal/index.js","webpack:///./src/renderer/components/Modals/ReceiveModal/ReceiveModal.js","webpack:///./src/renderer/components/Modals/ReceiveModal/index.js","webpack:///./src/renderer/components/Modals/TxInfoModal/TxInfoModal.js","webpack:///./src/renderer/components/Modals/TxInfoModal/index.js","webpack:///./src/renderer/components/Transactions/Transactions.js","webpack:///./src/renderer/components/Transactions/index.js","webpack:///./src/renderer/containers/Wallet/Wallet.js","webpack:///./src/renderer/containers/Wallet/index.js","webpack:///./src/renderer/containers/Peers/Peers.js","webpack:///./src/renderer/containers/Peers/index.js","webpack:///./src/renderer/containers/Outputs/Outputs.js","webpack:///./src/renderer/containers/Outputs/index.js","webpack:///./src/renderer/containers/Advanced/Advanced.js","webpack:///./src/renderer/containers/Advanced/index.js","webpack:///./src/renderer/Routes.js","webpack:///./src/renderer/components/StatusBar/StatusBar.js","webpack:///./src/renderer/components/StatusBar/index.js","webpack:///./src/renderer/App.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","App","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","a","createElement","document","getElementById","ScrollToTop","prevProps","this","props","location","pathname","window","scrollTo","children","Component","withRouter","dark_theme","createMuiTheme","palette","secondary","main","contrastText","primary","text","action","disabled","typography","useNextVariants","fontFamily","join","color","initial","overrides","MuiDialog","paper","backgroundColor","border","MuiInput","root","MuiButton","&:disabled","GrinDialog","external_react_default","styles_","theme","core_","id","title","React","propTypes","PropTypes","string","isRequired","SettingsModal","classes","_React$useState","useState","_React$useState2","slicedToArray_default","open","setOpen","handleClose","Fragment","IconButton_default","variant","aria-label","onClick","Settings_default","components_GrinDialog","onClose","maxWidth","fullWidth","DialogContent_default","Button_default","ipcRenderer","send","DialogActions_default","withStyles","position","width","spacing","unit","background","boxShadow","shadows","padding","outline","fab","margin","extendedIcon","marginRight","useStylesReddit","makeStyles","overflow","borderRadius","transition","transitions","&:hover","&$focused","concat","fade","borderColor","focused","CustomTextField","TextField_default","extends_default","InputProps","disableUnderline","SupportModal","_React$useState3","_React$useState4","submitting","setSubmitting","_React$useState5","_React$useState6","errorMessage","setErrorMessage","_React$useState7","_React$useState8","successMessage","setSuccessMessage","_React$useState9","_React$useState10","setName","_React$useState11","_React$useState12","email","setEmail","_React$useState13","_React$useState14","description","setDescription","closeWindow","ContactSupport_default","length","components_CustomTextField","type","placeholder","onChange","e","target","required","rows","multiline","currentTarget","style","marginBottom","removeAllListeners","on","event","status","success","setTimeout","ImageAvatars","Avatar_default","src","className","avatar","bigAvatar","height","UserMenu","flexGrow","grow","menuButton","marginLeft","loggedOut","external_react_router_dom_","to","Typography_default","sessionStorage","getItem","ImageAvatar","ButtonAppNav","pageName","noMenu","includeBack","onClickMenu","anchorEl","goBack","setGoBack","handleGoBack","preventDefault","menu","aria-owns","undefined","aria-haspopup","Menu_default","AppBar_default","Toolbar_default","ArrowBack_default","components_UserMenu","Settings","Modals_SupportModal","bool","func","SideMenu","useTheme","setLoggedOut","components_ButtonAppNav","drawer","anchor","drawerPaper","button","ChevronLeft_default","component","Link","AccountBalanceWallet_default","CallReceived_default","PermIdentity_default","PowerSettingsNew_default","display","appBar","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","hide","flexShrink","drawerHeader","objectSpread_default","alignItems","mixins","toolbar","justifyContent","content","contentShift","Login","loggedIn","setLoggedIn","failure","setFailure","username","setUsername","password","setPassword","handleErrorClose","components_SideMenu","CssBaseline_default","Dialog_default","aria-labelledby","aria-describedby","DialogTitle_default","DialogContentText_default","autoFocus","Paper_default","form","onSubmit","toUpperCase","FormControl_default","InputLabel_default","htmlFor","Input_default","submit","CircularProgress_default","size","buttonProgress","defineProperty_default","breakpoints","up","marginTop","flexDirection","top","left","WalletWords","walletSeed","showModal","verify","setVerify","Array","wordsToVerify","setWordsToVerify","verifiedWords","setVerifiedWords","changeVerifiedWord","index","newVerifiedWords","word","newWord","push","getWordDisplay","walletSeedWords","Grid_default","item","xs","walletWord","getWalletSeedWordsDisplay","split","numRows","j","container","direction","justify","wrap","showVerify","console","log","newWordsToVerify","randomIndex","Math","floor","random","alreadyExists","wordToVerify","validateWords","verified","warning","fontWeight","fontSize","Register","registered","setRegistered","setWalletSeed","showWalletSeed","setShowWalletSeed","confirmPassword","setConfirmPassword","ValidatorForm","addValidationRule","Register_WalletWords","external_react_material_ui_form_validator_","response","sendSync","label","validators","errorMessages","Restore","walletWords","setWalletWords","FormData","status_code","path","Main","_this","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","state","login","restore","users","_this2","statusCode","allUsers","setState","_this$props","dark_mode","_","minHeight","__dirname","variantIcon","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","CustomSnackbarContent","message","Icon","SnackbarContent_default","classNames","icon","iconVariant","close","Close_default","node","oneOf","green","dark","amber","opacity","bzip","Bzip2","GrinUtil","FormatAmount","amount","formatted","abs","pow","toFixed","Compress","data","Buffer","compressFile","toString","Decompress","string64","decompressed","decompressFile","SendFile","selected","selectedFile","setSelectedFile","once","file","fileChooserButton","SaveAlt_default","SendHttp","httpAddress","setHttpAddress","SendGrinbox","grinboxAddress","setGrinboxAddress","SendModal","method","setMethod","fee","setFee","handleSnackbarClose","reason","autoHideDuration","components_CustomSnackbarContent","amountInNanoGrins","result","JSON","stringify","original","slate","compressed","row","control","labelPlacement","calculatedAmount","SendModal_SendFile","SendModal_SendHttp","SendModal_SendGrinbox","align","disabledBackgroundColor","Send_default","ReceiveModal","closeModal","handleSelectFile","_event","url","handleCopy","clipboard","writeText","Snackbar_default","fileName","RadioGroup_default","FormControlLabel_default","Radio_default","FolderOpen_default","FileCopy_default","TxInfoModal","transactionId","setShowModal","transactionInfo","setTransactionInfo","blue","closeDialog","getField","Info_default","slate_id","slate_message","amount_credited","amount_debited","confirmed_height","confirmation_date_time","outputs","map","output","commitment","substring","keychain_path","mmr_index","block_height","number","Transactions","transactions","lastConfirmedHeight","showCanceled","repostTx","cancelTx","customTheme","txns","parse","sort","b","creation_date_time","txn","txnId","Date","setUTCSeconds","Modals_TxInfoModal","getStatus","creationDateTime","toLocaleString","CallMade_default","Cancel_default","Refresh_default","Wallet","summaryAmounts","total","awaiting_confirmation","immature","locked","currently_spendable","showSendModal","showReceiveModal","buttonsDisabled","onWalletSummaryResponse","assertThisInitialized_default","updateWallet","onWalletUpdated","onCanceled","onReposted","showSend","closeSend","showReceive","closeReceive","showHideCanceled","handleFinalize","updateButtonState","global","FULLY_SYNCED","BLOCK_HEIGHT","setInterval","amount_awaiting_confirmation","amount_immature","amount_locked","amount_currently_spendable","last_confirmed_height","showSpent","newValue","fileOpened","tx","maxHeight","Fab_default","Modals_SendModal","Modals_ReceiveModal","CallMerge_default","Divider_default","components_Transactions","actionIcon","textAlign","receive","createData","calories","fat","carbs","protein","desc","orderBy","headRows","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","onRequestSort","numSelected","rowCount","TableHead_default","TableRow_default","TableCell_default","sortDirection","TableSortLabel_default","active","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","spacer","flex","actions","Peers","refreshPeers","setRefreshPeers","setOrder","setOrderBy","dense","array","cmp","stabilizedThis","peers","tableWrapper","Table_default","table","TableBody_default","getSorting","el","labelId","hover","role","tabIndex","addr","scope","user_agent","Outputs","onOutputsResponse","updateOutputs","newOutputs","prevState","outputRows","paddingBottom","paddingTop","Advanced","Routes","isDarkMode","ScrollTop","exact","containers_Main","StatusBar","inbound","outbound","headerHeight","blockHeight","networkHeight","downloaded","totalSize","processed","updateStatus","statusTheme","orange","red","darkStatusTheme","getColor","startsWith","endsWith","getPercentage","numerator","denominator","round","Grid","Lens_default","statusText","chainHeight","connections","bottom","unhandled","logger","showDialog","yellow_theme","grey","yellow","Input","MuiTypography","snackbarStatus","snackbarMessage","getBackgroundColor","getTheme","renderer_Routes","components_StatusBar"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,qBClFAhC,EAAAD,QAAAkC,QAAA,wBCAAjC,EAAAD,QAAAkC,QAAA,2BCAAjC,EAAAD,QAAAkC,QAAA,oCCAAjC,EAAAD,QAAAkC,QAAA,+BCAAjC,EAAAD,QAAAkC,QAAA,6BCAAjC,EAAAD,QAAAkC,QAAA,uDCAAjC,EAAAD,QAAAkC,QAAA,2CCAAjC,EAAAD,QAAAkC,QAAA,yCCAAjC,EAAAD,QAAAkC,QAAA,mCCAAjC,EAAAD,QAAAkC,QAAA,4CCAAjC,EAAAD,QAAAkC,QAAA,+DCAAjC,EAAAD,QAAAkC,QAAA,+CCAAjC,EAAAD,QAAAkC,QAAA,wDCAAjC,EAAAD,QAAAkC,QAAA,qDCAAjC,EAAAD,QAAAkC,QAAA,mECAAjC,EAAAD,QAAAkC,QAAA,wDCAAjC,EAAAD,QAAAkC,QAAA,mDCAAjC,EAAAD,QAAAkC,QAAA,mDCAAjC,EAAAD,QAAAkC,QAAA,kDCAAjC,EAAAD,QAAAkC,QAAA,+CCAAjC,EAAAD,QAAAkC,QAAA,wDCAAjC,EAAAD,QAAAkC,QAAA,kDCAAjC,EAAAD,QAAAkC,QAAA,sDCAAjC,EAAAD,QAAAkC,QAAA,2CCAAjC,EAAAD,QAAAkC,QAAA,gDCAAjC,EAAAD,QAAAkC,QAAA,6CCAAjC,EAAAD,QAAAkC,QAAA,sDCAAjC,EAAAD,QAAAkC,QAAA,2CCAAjC,EAAAD,QAAAkC,QAAA,mDCAAjC,EAAAD,QAAAkC,QAAA,2CCAAjC,EAAAD,QAAAkC,QAAA,0CCAAjC,EAAAD,QAAAkC,QAAA,iDCAAjC,EAAAD,QAAAkC,QAAA,gDCAAjC,EAAAD,QAAAkC,QAAA,4CCAAjC,EAAAD,QAAAkC,QAAA,qDCAAjC,EAAAD,QAAAkC,QAAA,8CCAAjC,EAAAD,QAAAkC,QAAA,gDCAAjC,EAAAD,QAAAkC,QAAA,0CCAAjC,EAAAD,QAAAkC,QAAA,iDCAAjC,EAAAD,QAAAkC,QAAA,6CCAAjC,EAAAD,QAAAkC,QAAA,qCCAAjC,EAAAD,QAAAkC,QAAA,+CCAAjC,EAAAD,QAAAkC,QAAA,2CCAAjC,EAAAD,QAAAkC,QAAA,6BCAAjC,EAAAD,QAAAkC,QAAA,8CCAAjC,EAAAD,QAAAkC,QAAA,8CCAAjC,EAAAD,QAAAkC,QAAA,wCCAAjC,EAAAD,QAAAkC,QAAA,2CCAAjC,EAAAD,QAAAkC,QAAA,qCCAAjC,EAAAD,QAAAkC,QAAA,2CCAAjC,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","file":"renderer.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 108);\n","module.exports = require(\"react\");","module.exports = require(\"electron\");","module.exports = require(\"@material-ui/core\");","module.exports = require(\"electron-log\");","module.exports = require(\"prop-types\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"react-router-dom\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"react-material-ui-form-validator\");","module.exports = require(\"@material-ui/core/DialogContent\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@material-ui/core/DialogActions\");","module.exports = require(\"@material-ui/core/styles/withStyles\");","module.exports = require(\"@material-ui/core/Dialog\");","module.exports = require(\"@material-ui/core/DialogTitle\");","module.exports = require(\"@material-ui/icons/Refresh\");","module.exports = require(\"@material-ui/core/DialogContentText\");","module.exports = require(\"@material-ui/core/Avatar\");","module.exports = require(\"@material-ui/icons/CallReceived\");","module.exports = require(\"@material-ui/core/colors\");","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"@babel/runtime/helpers/extends\");","module.exports = require(\"@material-ui/core/CssBaseline\");","module.exports = require(\"@material-ui/core/Toolbar\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/icons/FileCopy\");","module.exports = require(\"@material-ui/core/FormControl\");","module.exports = require(\"@material-ui/icons/Info\");","module.exports = require(\"@material-ui/core/colors/green\");","module.exports = require(\"@material-ui/core/Snackbar\");","module.exports = require(\"@material-ui/core/\");","module.exports = require(\"@material-ui/core/TableCell\");","module.exports = require(\"@material-ui/core/AppBar\");","module.exports = require(\"classnames\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/icons/CallMade\");","module.exports = require(\"@material-ui/core/Fab\");","module.exports = require(\"@material-ui/core/Radio\");","module.exports = require(\"electron-unhandled\");","module.exports = require(\"@material-ui/core/Switch\");","module.exports = require(\"@material-ui/icons/CheckCircle\");","module.exports = require(\"@material-ui/icons/Error\");","module.exports = require(\"@material-ui/icons/Close\");","module.exports = require(\"@material-ui/core/colors/amber\");","module.exports = require(\"@material-ui/icons/Warning\");","module.exports = require(\"@material-ui/core/Divider\");","module.exports = require(\"@material-ui/core/Input\");","module.exports = require(\"@material-ui/core/InputLabel\");","module.exports = require(\"@material-ui/icons/Cancel\");","module.exports = require(\"@material-ui/core/TableRow\");","module.exports = require(\"@material-ui/core/Menu\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-hot-loader\");","module.exports = require(\"@babel/runtime/helpers/objectSpread\");","module.exports = require(\"@material-ui/icons/Menu\");","module.exports = require(\"@material-ui/icons/Settings\");","module.exports = require(\"@material-ui/icons/ContactSupport\");","module.exports = require(\"@material-ui/icons/ArrowBack\");","module.exports = require(\"@material-ui/icons/AccountBalanceWallet\");","module.exports = require(\"@material-ui/icons/PermIdentity\");","module.exports = require(\"@material-ui/icons/PowerSettingsNew\");","module.exports = require(\"@material-ui/icons/ChevronLeft\");","module.exports = require(\"@material-ui/core/CircularProgress\");","module.exports = require(\"@material-ui/icons/Send\");","module.exports = require(\"@material-ui/core/SnackbarContent\");","module.exports = require(\"@material-ui/icons/SaveAlt\");","module.exports = require(\"@material-ui/core/RadioGroup\");","module.exports = require(\"@material-ui/icons/FolderOpen\");","module.exports = require(\"@material-ui/icons/CallMerge\");","module.exports = require(\"@material-ui/core/colors/blue\");","module.exports = require(\"@material-ui/core/Table\");","module.exports = require(\"@material-ui/core/TableBody\");","module.exports = require(\"@material-ui/core/TableHead\");","module.exports = require(\"@material-ui/core/TableSortLabel\");","module.exports = require(\"@material-ui/icons/Lens\");","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {AppContainer} from 'react-hot-loader';\r\n\r\nconst render = () => {\r\n    const App = require('./App').default;\r\n    ReactDOM.render(\r\n        <AppContainer><App /></AppContainer>,\r\n        document.getElementById('App')\r\n    );\r\n}\r\n\r\nrender();\r\n\r\nif (module.hot) {\r\n    module.hot.accept(render);\r\n}\r\n","module.exports = require(\"@material-ui/icons/ChevronRight\");","module.exports = require(\"path\");","module.exports = require(\"compressjs\");","module.exports = require(\"clsx\");","module.exports = require(\"@material-ui/core/Checkbox\");","module.exports = require(\"@material-ui/core/Tooltip\");","module.exports = require(\"@material-ui/icons/Delete\");","module.exports = require(\"@material-ui/icons/FilterList\");","import { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location.pathname !== prevProps.location.pathname) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { Button, IconButton, Dialog, DialogTitle } from '@material-ui/core';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { MuiThemeProvider, createMuiTheme, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst dark_theme = createMuiTheme({\r\n    palette: {\r\n        secondary: {\r\n            main: '#ffffff',\r\n            contrastText: '#000000',\r\n        },\r\n        primary: {\r\n            main: '#666666',\r\n            contrastText: '#ffffff',\r\n        },\r\n        text: {\r\n            primary: '#ffffff',\r\n            secondary: '#aaaaaa',\r\n        },\r\n        action: {\r\n            disabled: '#888888'\r\n        }\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            \"Lato\",\r\n            \"sans-serif\"\r\n        ].join(\",\"),\r\n        color: '#ffffff',\r\n        initial: {\r\n            color: '#000000'\r\n        }\r\n    },\r\n    overrides: {\r\n        MuiDialog: {\r\n            paper: {\r\n                backgroundColor: '#000000',//'#444444',\r\n                border: '#ffffff 2px solid'\r\n            }\r\n        },\r\n        MuiInput: {\r\n            root: {\r\n                color: '#ffffff'\r\n            }\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                '&:disabled': {\r\n                    backgroundColor: '#555555'\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nclass GrinDialog extends React.Component {\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={dark_theme}>\r\n                <Dialog {...this.props}>\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        <center>\r\n                            {this.props.title}\r\n                        </center>\r\n                    </DialogTitle>\r\n                    {this.props.children}\r\n                </Dialog>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nGrinDialog.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GrinDialog;\r\n","import GrinDialog from './GrinDialog'\r\n\r\nexport default GrinDialog;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { ipcRenderer } from 'electron';\r\nimport GrinDialog from '../GrinDialog';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        position: \"absolute\",\r\n        width: theme.spacing.unit * 50,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing.unit * 4,\r\n        outline: \"none\"\r\n    },\r\n    fab: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing.unit\r\n    }\r\n});\r\n\r\nfunction SettingsModal(props) {\r\n    const { classes } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    function scanForOutputs() {\r\n        ipcRenderer.send(\"UpdateWallet\", true);\r\n    }\r\n\r\n    function resyncBlockchain() {\r\n        ipcRenderer.send(\"ResyncBlockchain\");\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IconButton\r\n                variant=\"round\"\r\n                aria-label=\"Settings\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                <SettingsIcon color=\"secondary\" />\r\n            </IconButton>\r\n            <GrinDialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                title=\"Settings\"\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n            >\r\n                <DialogContent>\r\n                    <center>\r\n                        <Button onClick={scanForOutputs} variant=\"contained\" color=\"secondary\">\r\n                            Scan for outputs\r\n                        </Button>\r\n                        <br /> <br />\r\n\r\n                        <Button onClick={resyncBlockchain} variant=\"contained\" color=\"secondary\">\r\n                            Resync Blockchain\r\n                        </Button>\r\n                    </center>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </GrinDialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nSettingsModal.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SettingsModal);\r\n","import SettingsModal from './SettingsModal'\r\n\r\nexport default SettingsModal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { fade, makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n    root: {\r\n        border: '1px solid #e2e2e1',\r\n        overflow: 'hidden',\r\n        borderRadius: 4,\r\n        backgroundColor: '#fcfcfb',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        padding: '0px 4px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        },\r\n        '&$focused': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n        color: '#000000'\r\n    },\r\n    focused: {},\r\n}));\r\n\r\nconst CustomTextField = (props) => {\r\n    const classes = useStylesReddit();\r\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nexport default CustomTextField;\r\n","import CustomTextField from './CustomTextField'\r\n\r\nexport default CustomTextField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactSupportIcon from \"@material-ui/icons/ContactSupport\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton,\r\n    FormControl, Input, InputLabel, TextField, Typography\r\n} from '@material-ui/core';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { ipcRenderer } from 'electron';\r\nimport GrinDialog from '../../GrinDialog';\r\nimport CustomTextField from '../../CustomTextField';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing.unit\r\n    }\r\n});\r\n\r\nfunction SupportModal(props) {\r\n    const { classes } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const [submitting, setSubmitting] = React.useState(false);\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const [successMessage, setSuccessMessage] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    function closeWindow() {\r\n        setOpen(false);\r\n        setSubmitting(false);\r\n        setErrorMessage('');\r\n        setSuccessMessage('');\r\n        setName('');\r\n        setEmail('');\r\n        setDescription('');\r\n    }\r\n\r\n    function submitRequest() {\r\n        setSubmitting(true);\r\n\r\n        ipcRenderer.removeAllListeners('Support::RequestSubmitted');\r\n        ipcRenderer.on('Support::RequestSubmitted', (event, status) => {\r\n            if (status.success == true) {\r\n                setSuccessMessage(\"Issue submitted. Thanks for your feedback.\");\r\n                setTimeout(closeWindow, 1500);\r\n            } else {\r\n                setErrorMessage(status.errorMessage);\r\n                setSubmitting(false);\r\n            }\r\n        });\r\n\r\n        ipcRenderer.send('Support::SubmitRequest', name, email, description);\r\n        setTimeout(function () {\r\n            setErrorMessage(\"Failed to submit: Operation timed out.\");\r\n            setSubmitting(false);\r\n        }, 5000);\r\n    }\r\n\r\n    function getMessageDisplay() {\r\n        if (errorMessage.length > 0) {\r\n            return (\r\n                <Typography color=\"error\">{errorMessage}</Typography>\r\n            );\r\n        } else if (successMessage.length > 0) {\r\n            return (\r\n                <Typography color=\"secondary\">{successMessage}</Typography>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IconButton\r\n                variant=\"round\"\r\n                aria-label=\"Support\"\r\n                onClick={() => { setOpen(true); }}\r\n            >\r\n                <ContactSupportIcon color=\"secondary\" />\r\n            </IconButton>\r\n            <GrinDialog\r\n                open={open}\r\n                onClose={closeWindow}\r\n                title=\"Report an Issue\"\r\n            >\r\n                <DialogContent>\r\n                    { getMessageDisplay() }\r\n                    <FormControl\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                    >\r\n                        <CustomTextField\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            value={name}\r\n                            placeholder=\"Name\"\r\n                            onChange={(e) => { setName(e.target.value) }}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl\r\n                        margin=\"dense\"\r\n                        required\r\n                        fullWidth\r\n                    >\r\n                        <CustomTextField\r\n                            name=\"email\"\r\n                            type=\"text\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            placeholder=\"Email\"\r\n                            onChange={(e) => { setEmail(e.target.value) }}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl\r\n                        margin=\"dense\"\r\n                        required\r\n                        fullWidth\r\n                    >\r\n                        <CustomTextField\r\n                            placeholder=\"Please enter a description of your problem.\"\r\n                            rows={4}\r\n                            fullWidth\r\n                            multiline={true}\r\n                            onChange={(e) => { setDescription(e.currentTarget.value) }}\r\n                        />\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions style={{ marginRight: '15px', marginBottom: '15px' }}>\r\n                    <Button onClick={closeWindow} variant=\"contained\" color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={submitRequest} disabled={submitting} variant=\"contained\" color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </GrinDialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nSupportModal.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SupportModal);\r\n","import SupportModal from './SupportModal'\r\n\r\nexport default SupportModal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst styles = {\r\n  avatar: {\r\n    margin: 10,\r\n  },\r\n  bigAvatar: {\r\n    margin: 10,\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n};\r\n\r\nfunction ImageAvatars(props) {\r\n  const { classes } = props;\r\n  return (\r\n      <Avatar src=\"https://avatars0.githubusercontent.com/u/45742329?s=400&u=57afc7119c701f3aeb526d6992376bee7aa60dd6&v=4\" className={classes.avatar} />\r\n  );\r\n}\r\n\r\nImageAvatars.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ImageAvatars);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ImageAvatar from './ImageAvatar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {ipcRenderer} from 'electron';\r\n\r\nconst styles = {\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    grow: {\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginLeft: -12,\r\n      marginRight: 20\r\n    }\r\n  };\r\n\r\nfunction UserMenu(props) {\r\n  const {classes} = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [loggedOut, setLoggedOut] = React.useState(false);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function logout() {\r\n    ipcRenderer.send('Logout');\r\n    setLoggedOut(true);\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  if (loggedOut === true) {\r\n    return (<Redirect to='/'/>);\r\n  }\r\n\r\n  return (\r\n      <Button\r\n          color=\"inherit\"\r\n          disabled\r\n      >\r\n          <Typography color='textPrimary' variant=' inline'><b>{sessionStorage.getItem(\"username\")}</b></Typography>\r\n          <ImageAvatar />\r\n      </Button>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(UserMenu);\r\n","import UserMenu from './UserMenu'\r\n\r\nexport default UserMenu;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, Redirect, withRouter } from 'react-router-dom';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SettingsModal from \"../../components/Settings\";\r\nimport SupportModal from \"../../components/Modals/SupportModal\";\r\nimport UserMenu from \"../../components/UserMenu\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport BackArrowIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  },\r\n});\r\n\r\nfunction ButtonAppNav(props) {\r\n  const { classes, pageName, noMenu, includeBack, onClickMenu } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [goBack, setGoBack] = React.useState(false);\r\n\r\n  function handleClick(event) {\r\n    //setAnchorEl(event.currentTarget);\r\n      onClickMenu();\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function handleGoBack(event) {\r\n    event.preventDefault();\r\n    setGoBack(true);\r\n  }\r\n\r\n  if (goBack === true) {\r\n    return (<Redirect to='/'/>);\r\n  }\r\n\r\n  var menu = (\r\n    <React.Fragment>\r\n        <IconButton\r\n            aria-owns={anchorEl ? 'nav-menu' : undefined}\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n            aria-label=\"Menu\"\r\n        >\r\n            <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            {!!pageName ? pageName : ''}\r\n        </Typography>\r\n    </React.Fragment>\r\n  );\r\n\r\n  function showMenu() {\r\n    if (!!noMenu ? true : false) {\r\n      return \"\";\r\n    } else {\r\n      return menu;\r\n    }\r\n  }\r\n\r\n  function showUserMenu() {\r\n    if (!!noMenu ? true : false) {\r\n      return \"\";\r\n    } else {\r\n      return <UserMenu />;\r\n    }\r\n  }\r\n\r\n  function showTopRightButtons() {\r\n    if (!!noMenu ? true : false) {\r\n      return (\r\n        <React.Fragment>\r\n            <Typography className={classes.grow}></Typography>\r\n            <SettingsModal />\r\n            <SupportModal />\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <SettingsModal />\r\n                <SupportModal />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n  }\r\n\r\n  function showBack() {\r\n    if (!!includeBack ? true : false) {\r\n      return (\r\n        <IconButton color=\"secondary\" aria-label=\"Go back\" onClick={handleGoBack}>\r\n          <BackArrowIcon/>\r\n        </IconButton>\r\n      );\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {showBack()}\r\n          {showMenu()}\r\n          {showUserMenu()}\r\n          {showTopRightButtons()}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nButtonAppNav.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    pageName: PropTypes.string,\r\n    noMenu: PropTypes.bool,\r\n    includeBack: PropTypes.bool,\r\n    onClickMenu: PropTypes.func\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(ButtonAppNav));\r\n","import ButtonAppNav from './ButtonAppNav'\r\n\r\nexport default ButtonAppNav;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { ipcRenderer } from 'electron';\r\nimport ButtonAppNav from '../ButtonAppNav';\r\n\r\nimport { Drawer, Divider, IconButton, List, ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\r\nimport WalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport OutputsIcon from '@material-ui/icons/CallReceived';\r\nimport PeersIcon from '@material-ui/icons/PermIdentity';\r\nimport LogoutIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n});\r\n\r\nfunction SideMenu(props) {\r\n    const { classes } = props;\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [loggedOut, setLoggedOut] = React.useState(false);\r\n\r\n    function logout() {\r\n        ipcRenderer.send('Logout');\r\n        setLoggedOut(true);\r\n    }\r\n\r\n    if (loggedOut === true) {\r\n        return (<Redirect to='/' />);\r\n    }\r\n\r\n    function handleDrawerOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleDrawerClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonAppNav onClickMenu={handleDrawerOpen} {...props} />\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <List>\r\n                    <ListItem button key='hide' onClick={handleDrawerClose}>\r\n                        <ListItemIcon><ChevronLeftIcon /></ListItemIcon>\r\n                        <ListItemText secondary='Collapse/Hide' />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key='Wallet' component={Link} to={{ pathname: '/wallet' }}>\r\n                        <ListItemIcon>\r\n                            <WalletIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText secondary='Wallet' />\r\n                    </ListItem>\r\n\r\n                    <ListItem button key='Outputs' component={Link} to={{ pathname: '/outputs' }}>\r\n                        <ListItemIcon>\r\n                            <OutputsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText secondary='Outputs' />\r\n                    </ListItem>\r\n\r\n                    <ListItem button key='Peers' component={Link} to={{ pathname: '/peers' }}>\r\n                        <ListItemIcon>\r\n                            <PeersIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText secondary='Peers' />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key='Logout' onClick={logout}>\r\n                        <ListItemIcon>\r\n                            <LogoutIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText secondary='Logout' />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nSideMenu.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SideMenu);\r\n","import SideMenu from './SideMenu'\r\n\r\nexport default SideMenu;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { ipcRenderer } from 'electron';\r\nimport SideMenu from \"../../components/SideMenu\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst styles = theme => ({\r\n    main: {\r\n        width: 'auto',\r\n        display: 'block', // Fix IE 11 issue.\r\n        marginLeft: theme.spacing.unit * 3,\r\n        marginRight: theme.spacing.unit * 3,\r\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n            width: 400,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 18,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing.unit,\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n});\r\n\r\nfunction Login(props) {\r\n    const { classes } = props;\r\n    const [submitting, setSubmitting] = React.useState(false);\r\n    const [loggedIn, setLoggedIn] = React.useState(false);\r\n    const [failure, setFailure] = React.useState(false);\r\n    const [username, setUsername] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        ipcRenderer.removeAllListeners('Login::Response');\r\n        ipcRenderer.on('Login::Response', (event, status) => {\r\n            if (status == 200) {\r\n                sessionStorage[\"username\"] = username.toUpperCase();\r\n                setLoggedIn(true);\r\n            } else {\r\n                setSubmitting(false);\r\n                setFailure(true);\r\n            }\r\n        });\r\n\r\n        ipcRenderer.send('Login', username, password);\r\n        setSubmitting(true);\r\n    }\r\n\r\n    if (loggedIn === true) {\r\n        return (<Redirect to='/wallet' />);\r\n    }\r\n\r\n    function handleErrorClose(event) {\r\n        event.preventDefault();\r\n        setFailure(false);\r\n    }\r\n\r\n    function changeUsername(e) {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    function changePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <SideMenu noMenu includeBack />\r\n            <main className={classes.main}>\r\n                <CssBaseline />\r\n\r\n                {/* Error Dialog */}\r\n                <Dialog\r\n                    open={failure}\r\n                    onClose={handleErrorClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" fullWidth alignItems=\"center\">\r\n                        <Typography color=\"error\" variant=\"h4\">\r\n                            {\"ERROR\"}\r\n                        </Typography>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <Typography variant=\"h6\">\r\n                                Failed to login. Username and/or password is wrong.\r\n                            </Typography>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleErrorClose} variant=\"contained\" color=\"primary\" autoFocus>\r\n                            Try Again\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Paper className={classes.paper}>\r\n                    <Avatar src=\"https://avatars0.githubusercontent.com/u/45742329?s=400&u=57afc7119c701f3aeb526d6992376bee7aa60dd6&v=4\" className={classes.avatar} />\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n                            <Input id=\"username\" name=\"username\" value={username} onChange={changeUsername} autoFocus />\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                            <Input name=\"password\" type=\"password\" id=\"password\" value={password} onChange={changePassword} />\r\n                        </FormControl>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={submitting}\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign in\r\n                        </Button>\r\n                        {submitting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                    </form>\r\n                </Paper>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nLogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Login);\r\n","import Login from './Login'\r\n\r\nexport default Login;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 20,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  walletWord: {\r\n    borderRadius: 3,\r\n    background: '#ddd',\r\n    padding: '4px 8px',\r\n    margin: '8px',\r\n  },\r\n  warning: {\r\n    display: 'inline',\r\n    backgroundColor: 'red',\r\n    color: 'white',\r\n    padding: '4px 8px',\r\n    borderRadius: '4px',\r\n    fontWeight: 700,\r\n    fontSize: '13px',\r\n    marginRight: '4px',\r\n  },\r\n});\r\n\r\nfunction WalletWords(props) {\r\n  const { classes, onClose, walletSeed } = props;\r\n  var { showModal } = props;\r\n  const [verify, setVerify] = React.useState(false);\r\n  const [wordsToVerify, setWordsToVerify] = React.useState(new Array());\r\n  const [verifiedWords, setVerifiedWords] = React.useState(new Array());\r\n\r\n  function changeVerifiedWord(e, index) {\r\n    var newVerifiedWords = verifiedWords;\r\n    for (var i = 0; i < newVerifiedWords.length; i++) {\r\n      if (newVerifiedWords[i].index == index) {\r\n        newVerifiedWords[i].word = e.target.value;\r\n        setVerifiedWords(newVerifiedWords);\r\n        return;\r\n      }\r\n    }\r\n\r\n    var newWord = new Object();\r\n    newWord[\"index\"] = index;\r\n    newWord[\"word\"] = e.target.value;\r\n    newVerifiedWords.push(newWord);\r\n    setVerifiedWords(newVerifiedWords);\r\n  }\r\n\r\n  function getWordDisplay(walletSeedWords, index) {\r\n    if (verify) {\r\n      for (var i = 0; i < wordsToVerify.length; i++) {\r\n        if (wordsToVerify[i].index == index) {\r\n          return (\r\n            <Grid item xs={2} className={classes.walletWord} fullWidth>\r\n              {(index + 1) + \".\"} <TextField onChange={e => changeVerifiedWord(e, index)} style={{ width: \"80px\" }} />\r\n            </Grid>\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return (<Grid item xs={2} className={classes.walletWord} fullWidth>{(index + 1) + \". \" + walletSeedWords[index]}</Grid>);\r\n  }\r\n\r\n  function getWalletSeedWordsDisplay() {\r\n    if (walletSeed != null) {\r\n      var display = [];\r\n      const walletSeedWords = walletSeed.split(' ');\r\n\r\n      let numRows = walletSeedWords.length / 6;\r\n      for (var j = 0; j < numRows; j++) {\r\n        let children = [];\r\n        for (var i = 0; i < 6; i++) {\r\n          const index = (j * 6) + i;\r\n          children.push(getWordDisplay(walletSeedWords, index));\r\n        }\r\n\r\n        display.push(\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            wrap=\"nowrap\"\r\n          >\r\n            {children}\r\n          </Grid>\r\n        );\r\n      }\r\n\r\n      return display;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  function getDialogText() {\r\n    if (verify == false) {\r\n      return (\r\n          <DialogContentText>\r\n            <center>\r\n              <span className={classes.warning}>Important</span>\r\n              <b>The below words are needed if you ever need to restore your wallet.<br/>Please write them down and keep them in a safe place.</b>\r\n            </center>\r\n            <br/>\r\n            <b>{getWalletSeedWordsDisplay()}</b>\r\n          </DialogContentText>\r\n      );\r\n    } else {\r\n      return (\r\n          <DialogContentText>\r\n            <center>\r\n              <b>Please fill in the missing words to continue.</b>\r\n            </center>\r\n            <br/>\r\n            <b>{getWalletSeedWordsDisplay()}</b>\r\n          </DialogContentText>\r\n      );\r\n    }\r\n  }\r\n\r\n  function showVerify(e) {\r\n    const walletSeedWords = walletSeed.split(' ');\r\n\r\n    console.log(walletSeedWords);\r\n    var newWordsToVerify = new Array();\r\n    while (newWordsToVerify.length < 5) {\r\n      const randomIndex = Math.floor(Math.random() * 24);\r\n      var alreadyExists = false;\r\n      for (var i = 0; i < newWordsToVerify.length; i++) {\r\n        if (newWordsToVerify[i].index == randomIndex) {\r\n          alreadyExists = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!alreadyExists) {\r\n        var wordToVerify = new Object();\r\n        wordToVerify[\"index\"] = randomIndex;\r\n        wordToVerify[\"word\"] = walletSeedWords[randomIndex];\r\n        newWordsToVerify.push(wordToVerify);\r\n      }\r\n    }\r\n\r\n    setWordsToVerify(newWordsToVerify);\r\n    console.log(newWordsToVerify);\r\n\r\n    setVerify(true);\r\n  }\r\n\r\n  function goBack(e) {\r\n    setVerifiedWords(new Array());\r\n    setWordsToVerify(new Array());\r\n    setVerify(false);\r\n  }\r\n\r\n  function validateWords() {\r\n    if (verify == false) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0; i < wordsToVerify.length; i++) {\r\n      var verified = false;\r\n      for (var j = 0; j < verifiedWords.length; j++) {\r\n        if (wordsToVerify[i].index == verifiedWords[j].index) {\r\n          if (wordsToVerify[i].word == verifiedWords[j].word) {\r\n            verified = true;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (verified == false) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    onClose();\r\n    showModal = false;\r\n  }\r\n\r\n  function getButtonGrid() {\r\n    if (verify == false) {\r\n      return (\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={4}/>\r\n          <Grid item xs={4}>\r\n            <Button onClick={showVerify} variant=\"contained\" color=\"primary\" fullWidth>\r\n              <b>NEXT</b>\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}/>\r\n        </Grid>\r\n      );\r\n    } else {\r\n      return (\r\n        <Grid\r\n          container\r\n          spacing={8}\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={2}/>\r\n          <Grid item xs={4}>\r\n            <Button onClick={goBack} variant=\"contained\" color=\"primary\" fullWidth>\r\n              <b>BACK</b>\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button onClick={validateWords} variant=\"contained\" color=\"primary\" fullWidth>\r\n              <b>FINISH</b>\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={2}/>\r\n        </Grid>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (showModal !== true) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={showModal}\r\n      onClose={validateWords}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\"><Typography variant=\"h4\"><center>Wallet Seed</center></Typography></DialogTitle>\r\n      <DialogContent>{getDialogText()}</DialogContent>\r\n      <DialogActions>{getButtonGrid()}<br/><br/><br/></DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nWalletWords.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  showModal: PropTypes.bool,\r\n  onClose: PropTypes.function,\r\n  walletSeed: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles)(WalletWords);\r\n","import WalletWords from './WalletWords';\r\n\r\nexport default WalletWords;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { ipcRenderer } from 'electron';\r\nimport SideMenu from \"../../components/SideMenu\";\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport WalletWords from \"./WalletWords\"\r\n\r\nconst styles = theme => ({\r\n    main: {\r\n        width: 'auto',\r\n        display: 'block', // Fix IE 11 issue.\r\n        marginLeft: theme.spacing.unit * 3,\r\n        marginRight: theme.spacing.unit * 3,\r\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n            width: 400,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 20,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing.unit,\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    warning: {\r\n        display: 'inline',\r\n        backgroundColor: 'red',\r\n        color: 'white',\r\n        padding: '4px 8px',\r\n        borderRadius: '4px',\r\n        fontWeight: 700,\r\n        fontSize: '13px',\r\n        marginRight: '4px',\r\n    },\r\n});\r\n\r\nfunction Register(props) {\r\n    const { classes } = props;\r\n    const [registered, setRegistered] = React.useState(false);\r\n    const [walletSeed, setWalletSeed] = React.useState(null);\r\n    const [showWalletSeed, setShowWalletSeed] = React.useState(false);\r\n    const [failure, setFailure] = React.useState(false);\r\n    const [username, setUsername] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = React.useState(\"\");\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const response = ipcRenderer.sendSync('CreateWallet', username, password);\r\n        if (response != null && response[\"status_code\"] == 200) {\r\n            sessionStorage[\"username\"] = username.toUpperCase();\r\n            setWalletSeed(response[\"wallet_seed\"]);\r\n            setShowWalletSeed(true);\r\n        } else {\r\n            setFailure(true);\r\n        }\r\n    }\r\n\r\n    if (registered === true) {\r\n        return (<Redirect to='/wallet' />);\r\n    }\r\n\r\n    function handleWalletSeedClose() {\r\n        setRegistered(true);\r\n    }\r\n\r\n    function handleErrorClose(event) {\r\n        event.preventDefault();\r\n        setFailure(false);\r\n    }\r\n\r\n    function changeUsername(e) {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    function changePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function changeConfirmPassword(e) {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n        if (value !== password) {\r\n            return false;\r\n        }\r\n        return true;\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <SideMenu noMenu includeBack />\r\n            <main className={classes.main}>\r\n                <CssBaseline />\r\n\r\n                <WalletWords showModal={showWalletSeed} onClose={handleWalletSeedClose} walletSeed={walletSeed} />\r\n\r\n                {/* Error Dialog */}\r\n                <Dialog\r\n                    open={failure}\r\n                    onClose={handleErrorClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"ERROR\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Failed to create user account. Account may already exist.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleErrorClose} variant=\"contained\" color=\"primary\" autoFocus>\r\n                            Try Again\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Paper className={classes.paper}>\r\n                    <Avatar src=\"https://avatars0.githubusercontent.com/u/45742329?s=400&u=57afc7119c701f3aeb526d6992376bee7aa60dd6&v=4\" className={classes.avatar} />\r\n\r\n                    <ValidatorForm\r\n                        className={classes.form}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <TextValidator\r\n                            label=\"Username\"\r\n                            onChange={changeUsername}\r\n                            name=\"username\"\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                            value={username}\r\n                            autoFocus\r\n                            fullWidth\r\n                        />\r\n                        <TextValidator\r\n                            label=\"Password\"\r\n                            onChange={changePassword}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                            value={password}\r\n                            fullWidth\r\n                        />\r\n                        <br />\r\n                        <TextValidator\r\n                            label=\"Repeat password\"\r\n                            onChange={changeConfirmPassword}\r\n                            name=\"repeatPassword\"\r\n                            type=\"password\"\r\n                            validators={['isPasswordMatch', 'required']}\r\n                            errorMessages={['password mismatch', 'this field is required']}\r\n                            value={confirmPassword}\r\n                            fullWidth\r\n                        />\r\n                        <br />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Create Account\r\n                        </Button>\r\n                    </ValidatorForm>\r\n                </Paper>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nRegister.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Register);\r\n","import Register from './Register'\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { ipcRenderer } from 'electron';\r\nimport SideMenu from \"../../components/SideMenu\";\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\nconst styles = theme => ({\r\n    main: {\r\n        width: 'auto',\r\n        display: 'block', // Fix IE 11 issue.\r\n        marginLeft: theme.spacing.unit * 3,\r\n        marginRight: theme.spacing.unit * 3,\r\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n            width: 500,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 10,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing.unit,\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n});\r\n\r\nfunction Restore(props) {\r\n    const { classes } = props;\r\n    const [registered, setRegistered] = React.useState(false);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n    const [failure, setFailure] = React.useState(false);\r\n    const [username, setUsername] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = React.useState(\"\");\r\n    const [walletWords, setWalletWords] = React.useState(\"\");\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const response = ipcRenderer.sendSync('RestoreFromSeed', username, password, walletWords);\r\n\r\n        var status_code = 0;\r\n        if (response != null) {\r\n            status_code = response.status_code;\r\n        }\r\n\r\n        if (status_code == 200) {\r\n            sessionStorage[\"username\"] = username.toUpperCase();\r\n            setUsername(username);\r\n            setRegistered(true);\r\n            return;\r\n        } else if (status_code == 400) {\r\n            setErrorMessage(\"Invalid wallet words entered. Please make sure all words are correct, and are separated by a single space.\");\r\n            setFailure(true);\r\n        } else {\r\n            setErrorMessage(\"Failed to create user account. Account may already exist.\");\r\n            setFailure(true);\r\n        }\r\n    }\r\n\r\n    if (registered === true) {\r\n        ipcRenderer.send('UpdateWallet', true);\r\n        return (<Redirect to='/wallet' />);\r\n    }\r\n\r\n    function handleErrorClose(event) {\r\n        event.preventDefault();\r\n        setFailure(false);\r\n    }\r\n\r\n    function changeUsername(e) {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    function changePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function changeConfirmPassword(e) {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n\r\n    function changeWalletWords(e) {\r\n        setWalletWords(e.target.value);\r\n    }\r\n\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n        if (value !== password) {\r\n            return false;\r\n        }\r\n        return true;\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <SideMenu noMenu includeBack />\r\n            <main className={classes.main}>\r\n                <CssBaseline />\r\n\r\n                {/* Error Dialog */}\r\n                <Dialog\r\n                    open={failure}\r\n                    onClose={handleErrorClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"ERROR\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            {errorMessage}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleErrorClose} variant=\"contained\" color=\"primary\" autoFocus>\r\n                            Try Again\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Paper className={classes.paper}>\r\n                    <Avatar src=\"https://avatars0.githubusercontent.com/u/45742329?s=400&u=57afc7119c701f3aeb526d6992376bee7aa60dd6&v=4\" className={classes.avatar} />\r\n                    <ValidatorForm\r\n                        className={classes.form}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <TextValidator\r\n                            label=\"Username\"\r\n                            onChange={changeUsername}\r\n                            name=\"username\"\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                            value={username}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                            fullWidth\r\n                        />\r\n                        <TextValidator\r\n                            label=\"Password\"\r\n                            onChange={changePassword}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                            value={password}\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                        />\r\n                        <br />\r\n                        <TextValidator\r\n                            label=\"Repeat password\"\r\n                            onChange={changeConfirmPassword}\r\n                            name=\"repeatPassword\"\r\n                            type=\"password\"\r\n                            validators={['isPasswordMatch', 'required']}\r\n                            errorMessages={['password mismatch', 'this field is required']}\r\n                            value={confirmPassword}\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <Typography>Wallet Words:</Typography>\r\n                        <TextValidator\r\n                            onChange={changeWalletWords}\r\n                            name=\"walletWords\"\r\n                            multiline={true}\r\n                            rows=\"3\"\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                            value={walletWords}\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                        />\r\n                        <Button type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}>\r\n                            Restore Account\r\n              </Button>\r\n                    </ValidatorForm>\r\n                </Paper>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nRestore.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Restore);\r\n","import Restore from './Restore'\r\n\r\nexport default Restore;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button, CssBaseline, Grid, Paper } from '@material-ui/core/';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport SideMenu from \"../../components/SideMenu\";\r\nimport UserAvatar from \"../../components/UserMenu/ImageAvatar\";\r\nimport { ipcRenderer } from \"electron\";\r\nconst path = require('path');\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    [theme.breakpoints.up(400)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nclass Main extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            login: false,\r\n            create: false,\r\n            restore: false,\r\n            users: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        ipcRenderer.removeAllListeners(\"GetAccounts::Response\");\r\n        ipcRenderer.on(\"GetAccounts::Response\", (event, statusCode, allUsers) => {\r\n            if (statusCode == 200) {\r\n                this.setState({\r\n                    users: allUsers\r\n                });\r\n            }\r\n        })\r\n\r\n        ipcRenderer.send(\"GetAccounts\");\r\n    }\r\n\r\n    render() {\r\n        const { classes, dark_mode } = this.props;\r\n\r\n        function loginClicked(event) {\r\n            event.preventDefault();\r\n            this.setState({\r\n                login: true\r\n            });\r\n        }\r\n\r\n        function createClicked(event) {\r\n            event.preventDefault();\r\n            this.setState({\r\n                create: true\r\n            });\r\n        }\r\n\r\n        function restoreClicked(event) {\r\n            event.preventDefault();\r\n            this.setState({\r\n                restore: true\r\n            });\r\n        }\r\n\r\n        if (this.state.login === true) {\r\n            return (<Redirect to='/login' />);\r\n        }\r\n\r\n        if (this.state.create === true) {\r\n            return (<Redirect to='/register' />);\r\n        }\r\n\r\n        if (this.state.restore === true) {\r\n            return (<Redirect to='/restore' />);\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <SideMenu open={true} noMenu />\r\n                <div className={classes.main}>\r\n                    <Grid container\r\n                        spacing={0}\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justify=\"center\"\r\n                        style={{ minHeight: '90vh' }}>\r\n\r\n                        <img src={path.join(__dirname, './static/img/GrinBanner.png')} style={{ width: '450px' }} />\r\n\r\n                        <br /><br /><br />\r\n                        <Button type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={loginClicked.bind(this)}\r\n                            autoFocus>\r\n                            Open Wallet\r\n                        </Button>\r\n                        <Button onClick={createClicked.bind(this)}\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}>\r\n                            Create New Wallet\r\n                        </Button>\r\n                        <Button onClick={restoreClicked.bind(this)}\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}>\r\n                            Restore Wallet\r\n                        </Button>\r\n                    </Grid><br />\r\n                </div>\r\n\r\n                {/*<div style={{ overflow: 'auto', maxHeight: 'calc(100vh - 200px)' }}>\r\n                    <Grid container\r\n                        spacing={2}\r\n                        alignItems=\"center\"\r\n                        justify=\"center\"\r\n                        style={{ width: '100%', padding: '10px' }}\r\n                    >\r\n                        {\r\n                            this.state.users.map((user, index) => (\r\n                                <Grid item id={index} xs={3}>\r\n                                    <Paper fullWidth style={{ backgroundColor: '#000000' }}>\r\n                                        <center><UserAvatar /></center><br />\r\n                                        {user}\r\n                                    </Paper>\r\n                                </Grid>\r\n                            ))\r\n                        }\r\n                    </Grid>\r\n                </div>*/}\r\n                \r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Main);\r\n","import Main from './Main';\r\n\r\nexport default Main;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction CustomSnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={classNames(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n    />\r\n  );\r\n}\r\n\r\nCustomSnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default withStyles(styles1)(CustomSnackbarContent);\r\n","import CustomSnackbarContent from './CustomSnackbarContent'\r\n\r\nexport default CustomSnackbarContent;\r\n","var compressjs = require('compressjs');\r\nvar bzip = compressjs.Bzip2;\r\n\r\nfunction FormatAmount(amount) {\r\n    var calculatedAmount = Math.abs(amount) / Math.pow(10, 9);\r\n    var formatted = calculatedAmount.toFixed(9) + \"ツ\";\r\n    if (amount < 0) {\r\n        formatted = \"-\" + formatted;\r\n    }\r\n\r\n    return formatted;\r\n}\r\n\r\nfunction Compress(string) {\r\n    var data = new Buffer(string, 'utf8');\r\n    return (new Buffer(bzip.compressFile(data))).toString('base64');\r\n}\r\n\r\nfunction Decompress(string64) {\r\n    const decompressed = bzip.decompressFile(new Buffer(string64, 'base64'));\r\n    return (new Buffer(decompressed)).toString('utf8')\r\n}\r\n\r\nexport default {FormatAmount, Compress, Decompress}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ipcRenderer } from 'electron';\r\nimport {Grid, FormControl, IconButton } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CustomTextField from '../../../CustomTextField';\r\n\r\nconst styles = theme => ({\r\n    fileChooserButton: {\r\n        marginTop: theme.spacing.unit,\r\n        marginLeft: -theme.spacing.unit\r\n    },\r\n});\r\n\r\nfunction SendFile(props) {\r\n    const { classes, selected, selectedFile, setSelectedFile } = props;\r\n    \r\n    function handleSelectFile(event) {\r\n        ipcRenderer.removeAllListeners('DestinationSelected');\r\n        ipcRenderer.once('DestinationSelected', (event, file) => {\r\n            if (file != null) {\r\n                setSelectedFile(file);\r\n            }\r\n        });\r\n\r\n        ipcRenderer.send('SendFile');\r\n    }\r\n\r\n    if (selected != true) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={11}>\r\n                <FormControl\r\n                    margin=\"dense\"\r\n                    required\r\n                    fullWidth\r\n                >\r\n                    <CustomTextField\r\n                        name=\"destinationFile\"\r\n                        type=\"text\"\r\n                        id=\"destinationFile\"\r\n                        value={selectedFile}\r\n                        placeholder='Destination File'\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n                <IconButton color='secondary' onClick={handleSelectFile} className={classes.fileChooserButton}>\r\n                    <SaveAltIcon />\r\n                </IconButton>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nSendFile.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    selected: PropTypes.bool,\r\n    selectedFile: PropTypes.string,\r\n    setSelectedFile: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(SendFile);\r\n","import SendFile from './SendFile';\r\n\r\nexport default SendFile;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport CustomTextField from '../../../CustomTextField';\r\n\r\nfunction SendHttp(props) {\r\n    const { selected, httpAddress, setHttpAddress } = props;\r\n\r\n    if (selected != true) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <FormControl\r\n                margin=\"dense\"\r\n                required\r\n                fullWidth\r\n            >\r\n                <CustomTextField\r\n                    name=\"URL\"\r\n                    type=\"text\"\r\n                    id=\"URL\"\r\n                    value={httpAddress}\r\n                    onChange={(event) => { setHttpAddress(event.target.value) }}\r\n                    placeholder='Address (eg. http(s)://12.34.56.78:3415)'\r\n                />\r\n            </FormControl>\r\n            <br />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nSendHttp.propTypes = {\r\n    selected: PropTypes.bool,\r\n    httpAddress: PropTypes.string,\r\n    setHttpAddress: PropTypes.func\r\n};\r\n\r\nexport default SendHttp;\r\n","import SendHttp from './SendHttp';\r\n\r\nexport default SendHttp;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ipcRenderer } from 'electron';\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport CustomTextField from '../../../CustomTextField';\r\n\r\nfunction SendGrinbox(props) {\r\n    const { selected, grinboxAddress, setGrinboxAddress } = props;\r\n\r\n    if (selected != true) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <FormControl\r\n                margin=\"dense\"\r\n                required\r\n                fullWidth\r\n            >\r\n                <CustomTextField\r\n                    name=\"Grinbox\"\r\n                    type=\"text\"\r\n                    id=\"Grinbox\"\r\n                    value={grinboxAddress}\r\n                    onChange={(event) => { setGrinboxAddress(event.target.value) }}\r\n                    placeholder='Address (eg. gVvGhkjf...)'\r\n                />\r\n            </FormControl>\r\n            <br />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nSendGrinbox.propTypes = {\r\n    selected: PropTypes.bool,\r\n    grinboxAddress: PropTypes.string,\r\n    setGrinboxAddress: PropTypes.func\r\n};\r\n\r\nexport default SendGrinbox;\r\n","import SendGrinbox from './SendGrinbox';\r\n\r\nexport default SendGrinbox;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ipcRenderer } from 'electron';\r\nimport {\r\n    Button, Dialog, DialogContent, DialogTitle, Grid, Radio, RadioGroup,\r\n    FormControl, FormControlLabel, FilledInput, Snackbar, Typography\r\n} from '@material-ui/core';\r\nimport GrinDialog from '../../GrinDialog';\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomSnackbarContent from \"../../CustomSnackbarContent\";\r\nimport CustomTextField from '../../CustomTextField';\r\nimport GrinUtil from \"../../../util/GrinUtil\";\r\nimport SendFile from \"./SendFile\";\r\nimport SendHttp from \"./SendHttp\";\r\nimport SendGrinbox from \"./SendGrinbox\";\r\nimport log from 'electron-log';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing.unit,\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing.unit\r\n    }\r\n});\r\n\r\nfunction SendModal(props) {\r\n    const { classes, onClose } = props;\r\n    var { showModal } = props;\r\n    const [method, setMethod] = React.useState(\"file\");\r\n    const [selectedFile, setSelectedFile] = React.useState(\"\");\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n    const [httpAddress, setHttpAddress] = React.useState(\"\");\r\n    const [grinboxAddress, setGrinboxAddress] = React.useState(\"\");\r\n    const [fee, setFee] = React.useState(\"\");\r\n\r\n    function closeWindow() {\r\n        showModal = false;\r\n        onClose();\r\n        setHttpAddress(\"\");\r\n        setGrinboxAddress(\"\");\r\n        setSelectedFile(\"\");\r\n        setErrorMessage(\"\");\r\n    }\r\n\r\n    function handleSend(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const amountInNanoGrins = data.get('amount') * Math.pow(10, 9);\r\n\r\n        var result = null;\r\n        if (method == \"file\") {\r\n            result = ipcRenderer.sendSync('Send', amountInNanoGrins);\r\n        } else if (method == \"http\") {\r\n            log.info(\"Sending to \" + httpAddress);\r\n            result = ipcRenderer.sendSync('SendToHTTP', httpAddress, amountInNanoGrins);\r\n            log.info(\"Sent via http(s). Result: \" + JSON.stringify(result));\r\n        } else if (method == \"grinbox\") {\r\n            log.info(\"Sending to \" + grinboxAddress);\r\n            result = ipcRenderer.sendSync('Grinbox::Send', grinboxAddress, amountInNanoGrins);\r\n            log.info(\"Sent via grinbox. Result: \" + JSON.stringify(result));\r\n            closeWindow();\r\n            return;\r\n        }\r\n        \r\n        if (result.status_code == 200) {\r\n            if (method == \"file\") {\r\n                const original = JSON.stringify(result.slate);\r\n                const compressed = GrinUtil.Compress(original);\r\n                log.info(\"Original: \" + original);\r\n                log.info(\"Base64: \" + compressed);\r\n                log.info(\"Decompressed: \" + GrinUtil.Decompress(compressed));\r\n                ipcRenderer.send('SaveToFile', selectedFile, JSON.stringify(result.slate));\r\n            }\r\n\r\n            closeWindow();\r\n        } else if (result.status_code == 409) {\r\n            setErrorMessage(\"Insufficient Funds Available!\");\r\n        } else {\r\n            setErrorMessage(\"Failed to send! Error Code: \" + result.status_code);\r\n        }\r\n    }\r\n\r\n    function handleMethodChange(event) {\r\n        setMethod(event.target.value);\r\n    }\r\n\r\n    function handleAmountChange(event) {\r\n        if (event.target.value.length > 0) {\r\n            const result = ipcRenderer.sendSync('EstimateFee', event.target.value * Math.pow(10, 9));\r\n            if (result.status_code == 200) {\r\n                const calculatedAmount = (result.fee / Math.pow(10, 9));\r\n                setFee(\"\" + calculatedAmount.toFixed(9));\r\n            } else {\r\n                setFee(\"\");\r\n                setErrorMessage(\"Error ocurred! Insufficient funds?\");\r\n            }\r\n        } else {\r\n            setFee(\"\");\r\n        }\r\n    }\r\n\r\n    function handleSnackbarClose(event, reason) {\r\n        setErrorMessage(\"\");\r\n    }\r\n\r\n    function shouldEnableSubmit() {\r\n        if (fee.length == 0) {\r\n            return false;\r\n        } else if (method == \"file\") {\r\n            return selectedFile.length > 0;\r\n        } else if (method == \"http\") {\r\n            return httpAddress.length > 0;\r\n        } else if (method == \"grinbox\") {\r\n            return grinboxAddress.length > 0;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    if (showModal !== true) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Snackbar\r\n                autoHideDuration={4000}\r\n                open={errorMessage.length > 0}\r\n                onClose={handleSnackbarClose}\r\n            >\r\n                <CustomSnackbarContent\r\n                    onClose={handleSnackbarClose}\r\n                    variant=\"error\"\r\n                    message={errorMessage}\r\n                />\r\n            </Snackbar>\r\n\r\n            <GrinDialog\r\n                open={true}\r\n                onClose={closeWindow}\r\n                fullWidth={true}\r\n                title='Send Grin'\r\n            >\r\n                <DialogContent>\r\n                    <form className={classes.form} onSubmit={handleSend}>\r\n                        <FormControl component=\"fieldset\" required>\r\n                            <RadioGroup\r\n                                aria-label=\"Method\"\r\n                                name=\"method\"\r\n                                value={method}\r\n                                onChange={handleMethodChange}\r\n                                row\r\n                            >\r\n                                <FormControlLabel value=\"file\" control={<Radio />} label=\"File\" labelPlacement=\"end\" />\r\n                                <FormControlLabel value=\"http\" control={<Radio />} label=\"Http(s)\" labelPlacement=\"end\" />\r\n                                <FormControlLabel value=\"grinbox\" control={<Radio />} label=\"Grinbox\" labelPlacement=\"end\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n\r\n                        <br />\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={8}>\r\n                                <FormControl margin=\"dense\" required fullWidth>\r\n                                    <CustomTextField name=\"amount\" type=\"text\" id=\"amount\" onChange={handleAmountChange} placeholder='Amount ツ' autoFocus />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <FormControl margin=\"dense\" fullWidth>\r\n                                    <CustomTextField name=\"fee\" type=\"text\" id=\"fee\" value={fee} placeholder='Fee ツ' disabled />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <SendFile selected={method == \"file\"} selectedFile={selectedFile} setSelectedFile={setSelectedFile} />\r\n                        <SendHttp selected={method == \"http\"} httpAddress={httpAddress} setHttpAddress={setHttpAddress} />\r\n                        <SendGrinbox selected={method == \"grinbox\"} grinboxAddress={grinboxAddress} setGrinboxAddress={setGrinboxAddress} />\r\n\r\n                        <br />\r\n                        <Typography align='right'>\r\n                            <Button onClick={closeWindow} variant=\"contained\" color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"submit\" disabledBackgroundColor='primary' style={{ marginLeft: '10px' }} variant=\"contained\" color=\"primary\" disabled={!shouldEnableSubmit()} >\r\n                                Send <SendIcon />\r\n                            </Button>\r\n                        </Typography>\r\n                    </form>\r\n                </DialogContent>\r\n            </GrinDialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nSendModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    showModal: PropTypes.bool,\r\n    onClose: PropTypes.function\r\n};\r\n\r\nexport default withStyles(styles)(SendModal);\r\n","import SendModal from './SendModal';\r\n\r\nexport default SendModal;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ipcRenderer, clipboard } from 'electron';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ReceiveIcon from \"@material-ui/icons/CallReceived\";\r\nimport OpenIcon from '@material-ui/icons/FolderOpen';\r\nimport CopyIcon from '@material-ui/icons/FileCopy';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomSnackbarContent from \"../../CustomSnackbarContent\";\r\nimport CustomTextField from \"../../CustomTextField\";\r\nimport GrinDialog from '../../GrinDialog';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    fileChooserButton: {\r\n        marginTop: theme.spacing.unit,\r\n        marginLeft: -theme.spacing.unit\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing.unit,\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing.unit\r\n    }\r\n});\r\n\r\nfunction ReceiveModal(props) {\r\n    const { classes, onClose } = props;\r\n    var { showModal } = props;\r\n    const [method, setMethod] = React.useState(\"file\");\r\n    const [selectedFile, setSelectedFile] = React.useState(\"\");\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n    const [httpAddress, setHttpAddress] = React.useState(\"\");\r\n    const [grinboxAddress, setGrinboxAddress] = React.useState(\"\");\r\n\r\n    if (httpAddress.length === 0) {\r\n        setTimeout(() => {\r\n            const url = ipcRenderer.sendSync('LookupURL'); // TODO: This should only be attempted once. Need to make ReceiveModal a React.Component\r\n            if (url != null) {\r\n                setHttpAddress(url);\r\n            }\r\n\r\n            const grinboxAddress = ipcRenderer.sendSync('Grinbox::GetAddress');\r\n            if (grinboxAddress != null) {\r\n                setGrinboxAddress(grinboxAddress);\r\n            }\r\n        }, 200);\r\n    }\r\n    \r\n    function closeModal() {\r\n        showModal = false;\r\n        onClose();\r\n        setHttpAddress(\"\");\r\n        setSelectedFile(\"\");\r\n        setErrorMessage(\"\");\r\n        setMethod('file');\r\n    }\r\n\r\n    function handleReceive(_event) {\r\n        if (method == \"file\") {\r\n            ipcRenderer.removeAllListeners('SlateOpened');\r\n            ipcRenderer.on('SlateOpened', (event, fileName, data) => {\r\n                if (data !== null) {\r\n                    var result = ipcRenderer.sendSync('Receive', data);\r\n                    if (result !== null) {\r\n                        if (result.status_code == 200) {\r\n                            closeModal();\r\n                            ipcRenderer.send('SaveToFile', (fileName + '.response'), JSON.stringify(result.slate));\r\n                        } else {\r\n                            setErrorMessage(\"Unknown error occurred!\");\r\n                        }\r\n                    } else {\r\n                        setErrorMessage(\"Unknown error occurred!\");\r\n                    }\r\n                }\r\n            });\r\n\r\n            ipcRenderer.send('OpenSlateFile', selectedFile);\r\n        } else if (method == \"http\" || method == \"grinbox\") {\r\n            closeModal();\r\n        }\r\n    }\r\n\r\n    function handleMethodChange(event) {\r\n        setMethod(event.target.value);\r\n    }\r\n\r\n    function handleSelectFile(_event) {\r\n        ipcRenderer.removeAllListeners('ReceiveFileSelected');\r\n        ipcRenderer.on('ReceiveFileSelected', (event, file) => {\r\n            if (file !== null) {\r\n                setSelectedFile(file);\r\n            } else {\r\n                setSelectedFile(\"\");\r\n            }\r\n        });\r\n\r\n        ipcRenderer.send('ReceiveFile');\r\n    }\r\n\r\n    function handleSnackbarClose(event, reason) {\r\n        setErrorMessage(\"\");\r\n    }\r\n\r\n    if (showModal !== true) {\r\n        return null;\r\n    }\r\n\r\n    function getFileDisplay() {\r\n        if (method != \"file\") {\r\n            return \"\";\r\n        }\r\n\r\n        return (\r\n            <Grid container spacing={2} fullWidth>\r\n                <Grid item xs={11}>\r\n                    <FormControl\r\n                        margin=\"dense\"\r\n                        required\r\n                        fullWidth\r\n                    >\r\n                        <CustomTextField\r\n                            name=\"receiveFile\"\r\n                            type=\"text\"\r\n                            id=\"receiveFile\"\r\n                            value={selectedFile}\r\n                            placeholder='Transaction File'\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <IconButton color='secondary' onClick={handleSelectFile} className={classes.fileChooserButton}>\r\n                        <OpenIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    function handleCopy() {\r\n        if (method == \"http\") {\r\n            clipboard.writeText(httpAddress);\r\n        } else if (method == \"grinbox\") {\r\n            clipboard.writeText(grinboxAddress);\r\n        }\r\n    }\r\n\r\n    function getWarning() {\r\n        if (method != \"http\") {\r\n            return \"\";\r\n        }\r\n        return (\r\n            <center style={{fontSize: '13px', color: 'red'}}>\r\n                <b>\r\n                    Ngrok addresses are ephemeral, and a new one is generated each time you open Grin++.<br/>\r\n                    After requesting funds via https, you must stay logged in until those funds are received.\r\n                </b>\r\n            </center>\r\n        )\r\n    }\r\n\r\n    function getHTTPDisplay() {\r\n        if (method != \"http\" && method != \"grinbox\") {\r\n            return \"\";\r\n        }\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <p>\r\n                    <b>{method == 'http' ? httpAddress : grinboxAddress}</b> \r\n\r\n                    <IconButton onClick={handleCopy} style={{ padding: '5px' }}>\r\n                        <CopyIcon fontSize='small' />\r\n                    </IconButton>\r\n                </p>\r\n                {getWarning()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Snackbar\r\n                autoHideDuration={4000}\r\n                open={errorMessage.length > 0}\r\n                onClose={handleSnackbarClose}\r\n            >\r\n                <CustomSnackbarContent\r\n                    onClose={handleSnackbarClose}\r\n                    variant=\"error\"\r\n                    message={errorMessage}\r\n                />\r\n            </Snackbar>\r\n\r\n            <GrinDialog\r\n                open={true}\r\n                onClose={closeModal}\r\n                size=\"md\"\r\n                fullWidth={true}\r\n                title='Receive Grin'\r\n            >\r\n                <DialogContent>\r\n                    <form className={classes.form} onSubmit={handleReceive}>\r\n                        <center>\r\n                        <FormControl component=\"fieldset\" required>\r\n                            <RadioGroup\r\n                                aria-label=\"Method\"\r\n                                name=\"method\"\r\n                                value={method}\r\n                                onChange={handleMethodChange}\r\n                                row\r\n                            >\r\n                                <FormControlLabel\r\n                                    value=\"file\"\r\n                                    control={<Radio />}\r\n                                    label=\"File\"\r\n                                    labelPlacement=\"end\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    value=\"http\"\r\n                                    control={<Radio />}\r\n                                    label=\"https\"\r\n                                    labelPlacement=\"end\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    value=\"grinbox\"\r\n                                    control={<Radio />}\r\n                                    label=\"Grinbox\"\r\n                                    labelPlacement=\"end\"\r\n                                />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n\r\n                        <br />\r\n\r\n                        {/* ReceiveFile */}\r\n                        {getFileDisplay()}\r\n\r\n                        {/* ReceiveHTTP */}\r\n                        {getHTTPDisplay()}\r\n\r\n                        <br />\r\n                        </center>\r\n                        <Typography align='right'>\r\n                            <Button onClick={closeModal} variant=\"contained\" color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"submit\" style={{ marginLeft: '10px' }} variant=\"contained\" color=\"primary\">\r\n                                Receive <ReceiveIcon />\r\n                            </Button>\r\n                        </Typography>\r\n                    </form>\r\n                </DialogContent>\r\n            </GrinDialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nReceiveModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    showModal: PropTypes.bool,\r\n    onClose: PropTypes.function\r\n};\r\n\r\nexport default withStyles(styles)(ReceiveModal);\r\n","import ReceiveModal from './ReceiveModal';\r\n\r\nexport default ReceiveModal;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ipcRenderer, clipboard } from 'electron';\r\nimport {\r\n    Button, DialogContent, Grid, IconButton, Typography, Tooltip, Divider\r\n} from '@material-ui/core';\r\nimport { MuiThemeProvider, createMuiTheme, withStyles } from '@material-ui/core/styles'\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport GrinUtil from \"../../../util/GrinUtil.js\";\r\nimport CopyIcon from '@material-ui/icons/FileCopy';\r\nimport GrinDialog from '../../GrinDialog';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing.unit\r\n    }\r\n});\r\n\r\nfunction TxInfoModal(props) {\r\n    const { classes, transactionId } = props;\r\n    const [ showModal, setShowModal] = React.useState(false);\r\n    const [ transactionInfo, setTransactionInfo ] = React.useState(null);\r\n\r\n    const blueTheme = createMuiTheme({\r\n        palette: {\r\n            primary: blue\r\n        },\r\n        typography: {\r\n            useNextVariants: true,\r\n        }\r\n    });\r\n\r\n    function showDialog() {\r\n        // TODO: Load Info\r\n        const result = ipcRenderer.sendSync(\"TransactionInfo\", transactionId);\r\n        if (result.status_code == 200) {\r\n            setTransactionInfo(result);\r\n            setShowModal(true);\r\n        }\r\n    }\r\n\r\n    function closeDialog() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    function getField(label, value) {\r\n        if (value == null) {\r\n            return \"\";\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <b>{label}:</b> {value}<br />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getOutputs(outputs) {\r\n        return (\r\n            outputs\r\n                //.sort(function (a, b) { return b.creation_date_time - a.creation_date_time })\r\n                .map(function (output) {\r\n                    return (\r\n                        <React.Fragment key={output.commitment}>\r\n                            <Tooltip title=\"Commitment\" aria-label={output.commitment}>\r\n                                <React.Fragment>\r\n                                    <b>Commitment:</b> {output.commitment.substring(0, 12) + \"...\" + output.commitment.substring(54)}\r\n                                    <IconButton onClick={() => { clipboard.writeText(output.commitment) }} style={{ padding: '5px' }}>\r\n                                        <CopyIcon fontSize='small' color='primary' />\r\n                                    </IconButton>\r\n                                </React.Fragment>\r\n                            </Tooltip>\r\n                            <br />\r\n\r\n                            {getField(\"Keychain Path\", output.keychain_path)}\r\n                            {getField(\"Amount\", GrinUtil.FormatAmount(output.amount))}\r\n                            {getField(\"Status\", output.status)}\r\n                            {getField(\"MMR Index\", output.mmr_index)}\r\n                            {getField(\"Block Height\", output.block_height)}\r\n                            <Divider variant=\"fullWidth\" />\r\n                        </React.Fragment>\r\n                    );\r\n                })\r\n        );\r\n    }\r\n\r\n    function getInfo() {\r\n        if (transactionInfo === null) {\r\n            return \"\";\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Typography\r\n                    variant='body1'\r\n                    align='left'\r\n                >\r\n                    {getField(\"ID\", transactionInfo.id)}\r\n                    {getField(\"UUID\", transactionInfo.slate_id)}\r\n                    {getField(\"Message\", transactionInfo.slate_message)}\r\n                    {getField(\"Credited\", GrinUtil.FormatAmount(transactionInfo.amount_credited))}\r\n                    {getField(\"Debited\", GrinUtil.FormatAmount(transactionInfo.amount_debited))}\r\n                    {getField(\"Confirmed Height\", transactionInfo.confirmed_height)}\r\n                    {getField(\"Confirmed DateTime\", transactionInfo.confirmation_date_time)}\r\n\r\n                    <br />\r\n                    <b>Outputs:</b><br />\r\n                </Typography>\r\n                \r\n                <Divider variant=\"fullWidth\" />\r\n                {getOutputs(transactionInfo.outputs)}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title=\"Info\" aria-label=\"Transaction Info\">\r\n                <IconButton onClick={showDialog} style={{ padding: '2px' }}>\r\n                    <InfoIcon color='secondary' />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <GrinDialog\r\n                open={showModal}\r\n                onClose={closeDialog}\r\n                fullWidth={true}\r\n                maxWidth='sm'\r\n                title=\"Transaction Info\"\r\n            >\r\n                <DialogContent>\r\n                    {getInfo()}\r\n                    <br />\r\n                    <Typography align='right'>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={closeDialog}>\r\n                            Close\r\n                        </Button>\r\n                    </Typography>\r\n                </DialogContent>\r\n            </GrinDialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nTxInfoModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    transactionId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(TxInfoModal);\r\n","import TxInfoModal from './TxInfoModal';\r\n\r\nexport default TxInfoModal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IconButton, Grid, Divider, Tooltip, Typography } from '@material-ui/core';\r\nimport { MuiThemeProvider, createMuiTheme, withStyles } from '@material-ui/core/styles'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport ReceiveIcon from '@material-ui/icons/CallReceived';\r\nimport SendIcon from \"@material-ui/icons/CallMade\";\r\nimport green from '@material-ui/core/colors/green';\r\nimport TxInfoModal from '../Modals/TxInfoModal';\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    status: {\r\n        marginTop: '4px',\r\n        marginBottom: '2px'\r\n    },\r\n    creationDateTime: {\r\n        marginTop: '2px',\r\n        marginBottom: '4px'\r\n    },\r\n    amount: {\r\n        marginTop: '2px',\r\n        marginBottom: '2px'\r\n    }\r\n};\r\n\r\nfunction Transactions(props) {\r\n    const { classes, transactions, lastConfirmedHeight, showCanceled, repostTx, cancelTx } = props;\r\n\r\n    const customTheme = createMuiTheme({\r\n        palette: {\r\n            primary: green\r\n        },\r\n        typography: {\r\n            useNextVariants: true,\r\n        }\r\n    });\r\n\r\n    function FormatAmount(amount) {\r\n        var calculatedAmount = Math.abs(amount) / Math.pow(10, 9);\r\n        var formatted = calculatedAmount.toFixed(9) + \"ツ\";\r\n        if (amount < 0) {\r\n            formatted = \"-\" + formatted;\r\n        }\r\n\r\n        return formatted;\r\n    }\r\n\r\n    function getStatus(txn, lastConfirmedHeight) {\r\n        const status = txn.type;\r\n        if (status == \"Sent\" || status == \"Received\") {\r\n            if ((txn.confirmed_height + 10) > lastConfirmedHeight) {\r\n                return status + \" (\" + (lastConfirmedHeight - txn.confirmed_height + 1) + \" Confirmations)\";\r\n            }\r\n\r\n            return status;\r\n        } else if (status == \"Sending (Finalized)\") {\r\n            return \"Sending (Unconfirmed)\";\r\n        } else {\r\n            return status;\r\n        }\r\n    }\r\n\r\n    function getActionIcon(txnId, status) {\r\n        if (status == \"Sent\") {\r\n            return (\r\n                <IconButton disabled>\r\n                    <SendIcon color='primary' />\r\n                </IconButton>\r\n            );\r\n        } else if (status == \"Received\" || status == \"Coinbase\") {\r\n            return (\r\n                <MuiThemeProvider theme={customTheme}>\r\n                    <IconButton disabled>\r\n                        <ReceiveIcon color='primary' />\r\n                    </IconButton>\r\n                </MuiThemeProvider>\r\n            );\r\n        } else if (status == \"Canceled\") {\r\n            return (\r\n                <IconButton disabled>\r\n                    <CancelIcon />\r\n                </IconButton>\r\n            );\r\n        } else if (status == \"Sending (Finalized)\") {\r\n            return (\r\n                <Tooltip title=\"Repost\" aria-label=\"Repost Transaction\">\r\n                    <IconButton onClick={function () { repostTx(txnId) }}>\r\n                        <RefreshIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            );\r\n        } else {\r\n            return (\r\n                <Tooltip title=\"Cancel\" aria-label=\"Cancel Transaction\">\r\n                    <IconButton onClick={function () { cancelTx(txnId) }}>\r\n                        <CancelIcon color='error' />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (transactions != null) {\r\n        var txns = JSON.parse(transactions);\r\n        if (txns != null) {\r\n            return (\r\n                txns\r\n                    .sort(function (a, b) { return b.creation_date_time - a.creation_date_time })\r\n                    .map(function (txn) {\r\n                        if (txn.type == \"Canceled\" && showCanceled == false) {\r\n                            return \"\";\r\n                        }\r\n\r\n                        var creation_date_time = new Date(0);\r\n                        creation_date_time.setUTCSeconds((txn.creation_date_time));\r\n\r\n                        return (\r\n                            <React.Fragment key={txn.id}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={6}>\r\n                                        <Typography variant='h6' className={classes.status}>\r\n                                            <TxInfoModal transactionId={txn.id} />\r\n                                            {getStatus(txn, lastConfirmedHeight)}\r\n                                        </Typography>\r\n                                        <Typography variant='body1' className={classes.creationDateTime}>{creation_date_time.toLocaleString()}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant='h6' className={classes.amount} align=\"right\">\r\n                                            {FormatAmount(txn.amount_credited - txn.amount_debited)}\r\n                                            {getActionIcon(txn.id, txn.type)}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider variant=\"fullWidth\" />\r\n                            </React.Fragment>\r\n                        );\r\n                    })\r\n            );\r\n        }\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nTransactions.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    transactions: PropTypes.string.isRequired,\r\n    lastConfirmedHeight: PropTypes.number.isRequired,\r\n    showCanceled: PropTypes.bool.isRequired,\r\n    repostTx: PropTypes.func.isRequired,\r\n    cancelTx: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Transactions);\r\n","import Transactions from './Transactions'\r\n\r\nexport default Transactions;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SideMenu from '../../components/SideMenu';\r\nimport { ipcRenderer } from 'electron';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SendModal from '../../components/Modals/SendModal';\r\nimport ReceiveModal from '../../components/Modals/ReceiveModal';\r\nimport SendIcon from \"@material-ui/icons/CallMade\";\r\nimport ReceiveIcon from '@material-ui/icons/CallReceived';\r\nimport FinalizeIcon from '@material-ui/icons/CallMerge';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\r\nimport Transactions from '../../components/Transactions';\r\nimport GrinUtil from \"../../util/GrinUtil.js\";\r\n\r\nconst styles = theme => ({\r\n    fullWidth: {\r\n        width: '100%',\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    actionIcon: {\r\n        padding: 2 * theme.spacing.unit,\r\n        textAlign: 'center'\r\n    },\r\n    send: {\r\n        padding: theme.spacing.unit,\r\n        textAlign: 'left',\r\n    },\r\n    receive: {\r\n        padding: theme.spacing.unit,\r\n        textAlign: 'right',\r\n    }\r\n});\r\n\r\nclass Wallet extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        var summaryAmounts = new Object();\r\n        summaryAmounts.total = 0;\r\n        summaryAmounts.awaiting_confirmation = 0;\r\n        summaryAmounts.immature = 0;\r\n        summaryAmounts.locked = 0;\r\n        summaryAmounts.currently_spendable = 0;\r\n\r\n        this.state = {\r\n            transactions: null,\r\n            lastConfirmedHeight: 0,\r\n            showCanceled: false,\r\n            showSendModal: false,\r\n            showReceiveModal: false,\r\n            summaryAmounts: summaryAmounts,\r\n            buttonsDisabled: true\r\n        };\r\n\r\n        this.onWalletSummaryResponse = this.onWalletSummaryResponse.bind(this);\r\n        this.updateWallet = this.updateWallet.bind(this);\r\n        this.onWalletUpdated = this.onWalletUpdated.bind(this);\r\n        this.onCanceled = this.onCanceled.bind(this);\r\n        this.onReposted = this.onReposted.bind(this);\r\n        this.showSend = this.showSend.bind(this);\r\n        this.closeSend = this.closeSend.bind(this);\r\n        this.showReceive = this.showReceive.bind(this);\r\n        this.closeReceive = this.closeReceive.bind(this);\r\n        this.showHideCanceled = this.showHideCanceled.bind(this);\r\n        this.handleFinalize = this.handleFinalize.bind(this);\r\n        this.updateButtonState = this.updateButtonState.bind(this);\r\n    }\r\n\r\n    updateButtonState() {\r\n        if (global.FULLY_SYNCED != true || global.BLOCK_HEIGHT >= 262080) {\r\n            if (this.state.buttonsDisabled == false) {\r\n                this.setState({\r\n                    buttonsDisabled: true\r\n                });\r\n            }\r\n        } else if (this.state.buttonsDisabled == true) {\r\n            this.setState({\r\n                buttonsDisabled: false\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ipcRenderer.removeAllListeners('WalletSummary::Response');\r\n        ipcRenderer.on('WalletSummary::Response', this.onWalletSummaryResponse);\r\n\r\n        ipcRenderer.removeAllListeners('Cancel::Response');\r\n        ipcRenderer.on('Cancel::Response', this.onCanceled);\r\n\r\n        ipcRenderer.removeAllListeners('Repost::Response');\r\n        ipcRenderer.on('Repost::Response', this.onReposted);\r\n\r\n        ipcRenderer.removeAllListeners('UpdateWallet::Response');\r\n        ipcRenderer.on('UpdateWallet::Response', this.onWalletUpdated);\r\n\r\n        ipcRenderer.send('WalletSummary', this.state.showCanceled);\r\n\r\n        setInterval(this.updateButtonState, 1000);\r\n    }\r\n\r\n    onWalletSummaryResponse(event, statusCode, response) {\r\n        if (statusCode == 200) {\r\n            var summaryAmounts = new Object();\r\n            summaryAmounts.total = response.total;\r\n            summaryAmounts.awaiting_confirmation = response.amount_awaiting_confirmation;\r\n            summaryAmounts.immature = response.amount_immature;\r\n            summaryAmounts.locked = response.amount_locked;\r\n            summaryAmounts.currently_spendable = response.amount_currently_spendable;\r\n\r\n            this.setState({\r\n                transactions: response.transactions,\r\n                lastConfirmedHeight: response.last_confirmed_height,\r\n                summaryAmounts: summaryAmounts\r\n            });\r\n        } else {\r\n            log.error(\"WalletSummary::Response returned result \" + statusCode);\r\n        }\r\n    }\r\n\r\n    updateWallet() {\r\n        ipcRenderer.send('UpdateWallet', this.state.showSpent, this.state.showCanceled);\r\n    }\r\n\r\n    onWalletUpdated(event, statusCode) {\r\n        if (statusCode == 200) {\r\n            ipcRenderer.send('WalletSummary', this.state.showCanceled);\r\n        } else {\r\n            // TODO: Show error?\r\n        }\r\n    }\r\n\r\n    onCanceled(event, statusCode) {\r\n        if (statusCode == 200) {\r\n            ipcRenderer.send('WalletSummary', this.state.showCanceled);\r\n        } else {\r\n            // TODO: Show error?\r\n        }\r\n    }\r\n\r\n    onReposted(event, statusCode) {\r\n        if (statusCode == 200) {\r\n            ipcRenderer.send('WalletSummary', this.state.showCanceled);\r\n        } else {\r\n            // TODO: Show error?\r\n        }\r\n    }\r\n\r\n    showSend(event) {\r\n        this.setState({\r\n            showSendModal: true\r\n        });\r\n    }\r\n\r\n    closeSend(event) {\r\n        this.setState({\r\n            showSendModal: false\r\n        });\r\n        this.updateWallet();\r\n    }\r\n\r\n    showReceive(event) {\r\n        this.setState({\r\n            showReceiveModal: true\r\n        });\r\n    }\r\n\r\n    closeReceive(event) {\r\n        this.setState({\r\n            showReceiveModal: false\r\n        });\r\n        this.updateWallet();\r\n    }\r\n\r\n    showHideCanceled(event) {\r\n        const newValue = !this.state.showCanceled;\r\n        this.setState({\r\n            showCanceled: newValue\r\n        });\r\n\r\n        ipcRenderer.send('WalletSummary', newValue);\r\n    }\r\n\r\n    handleFinalize(event) {\r\n        ipcRenderer.removeAllListeners('ReceiveFileSelected');\r\n        ipcRenderer.on('ReceiveFileSelected', (event, fileName) => {\r\n            if (fileName != null) {\r\n                ipcRenderer.removeAllListeners('SlateOpened');\r\n                ipcRenderer.on('SlateOpened', (event, fileOpened, data) => {\r\n                    if (data !== null) {\r\n                        var result = ipcRenderer.sendSync('Finalize', data);\r\n                        if (result !== null && result.status_code == 200) {\r\n                            ipcRenderer.send('SaveToFile', (fileName + '.finalized'), JSON.stringify(result.tx));\r\n                            // TODO: PostTx?\r\n\r\n                            this.updateWallet();\r\n                        } else {\r\n                            // TODO: Handle this\r\n                        }\r\n                    }\r\n                });\r\n\r\n                ipcRenderer.send('OpenSlateFile', fileName);\r\n            }\r\n        });\r\n\r\n        ipcRenderer.send('ReceiveFile');\r\n    }\r\n    \r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        //var result = ipcRenderer.sendSync('WalletSummary');\r\n        var total = GrinUtil.FormatAmount(this.state.summaryAmounts.total);\r\n        var amount_awaiting_confirmation = GrinUtil.FormatAmount(this.state.summaryAmounts.awaiting_confirmation);\r\n        var amount_immature = GrinUtil.FormatAmount(this.state.summaryAmounts.immature);\r\n        var amount_locked = GrinUtil.FormatAmount(this.state.summaryAmounts.locked);\r\n        var amount_currently_spendable = GrinUtil.FormatAmount(this.state.summaryAmounts.currently_spendable);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <SideMenu pageName='Wallet' />\r\n                <Grid container spacing={2} style={{ marginTop: '1px', marginBottom: '0px', maxHeight: 'calc(100vh - 104px)', overflow: 'auto' }} className={classes.root}>\r\n\r\n                    <Grid item xs={2} />\r\n                    <Grid item xs={4}>\r\n                        <br />\r\n                        <Typography variant=\"h6\">Spendable</Typography>\r\n                        <Typography variant=\"h4\">{amount_currently_spendable}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <br />\r\n                        <Typography align=\"right\" variant=\"subtitle2\">\r\n                            Total:  {total}<br />\r\n                            Immature:  {amount_immature}<br />\r\n                            Unconfirmed:  {amount_awaiting_confirmation}<br />\r\n                            Locked:  {amount_locked}<br />\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2} />\r\n\r\n                    <Grid item xs={2} />\r\n                    <Grid item xs={8}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={4}>\r\n                                <Fab\r\n                                    variant=\"extended\"\r\n                                    className={classes.fullWidth}\r\n                                    aria-label=\"Send\"\r\n                                    onClick={this.showSend}\r\n                                    color=\"primary\"\r\n                                    disabled={this.state.buttonsDisabled}\r\n                                    fullWidth\r\n                                >\r\n                                    <SendIcon className={classes.extendedIcon} /> Send\r\n                            </Fab>\r\n                                <SendModal showModal={this.state.showSendModal} onClose={this.closeSend} />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Fab\r\n                                    variant=\"extended\"\r\n                                    className={classes.fullWidth}\r\n                                    aria-label=\"Receive\"\r\n                                    onClick={this.showReceive}\r\n                                    color=\"primary\"\r\n                                    disabled={this.state.buttonsDisabled}\r\n                                    fullWidth\r\n                                >\r\n                                    <ReceiveIcon className={classes.extendedIcon} /> Receive\r\n                            </Fab>\r\n                                <ReceiveModal showModal={this.state.showReceiveModal} onClose={this.closeReceive} />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Fab\r\n                                    variant=\"extended\"\r\n                                    className={classes.fullWidth}\r\n                                    aria-label=\"Finalize\"\r\n                                    onClick={this.handleFinalize}\r\n                                    color=\"primary\"\r\n                                    disabled={this.state.buttonsDisabled}\r\n                                    fullWidth\r\n                                >\r\n                                    <FinalizeIcon className={classes.extendedIcon} /> Finalize\r\n                                </Fab>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={2} />\r\n\r\n                    <Grid item xs={2} />\r\n                    <Grid item xs={6}>\r\n                        <br />\r\n                        <Typography variant=\"h5\"><b>Transactions</b>\r\n                            <Button onClick={this.showHideCanceled} style={{ marginBottom: '7px' }}>\r\n                                ({this.state.showCanceled ? 'Hide' : 'Show'} Canceled)\r\n                            </Button>\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={2}>\r\n                        <div align='right'>\r\n                            <br />\r\n                            <Button onClick={() => { ipcRenderer.send('UpdateWallet', false) }}>\r\n                                <RefreshIcon /> Refresh\r\n                        </Button>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={2} />\r\n                    <Grid item xs={8}>\r\n                        <Divider variant=\"fullWidth\" />\r\n                        <Transactions\r\n                            transactions={this.state.transactions}\r\n                            lastConfirmedHeight={this.state.last_confirmed_height}\r\n                            showCanceled={this.state.showCanceled}\r\n                            repostTx={(txnId) => { ipcRenderer.send('Repost', txnId) }}\r\n                            cancelTx={(txnId) => { ipcRenderer.send('Cancel', txnId) }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nWallet.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Wallet);\r\n","import Wallet from './Wallet';\r\n\r\nexport default Wallet;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SideMenu from '../../components/SideMenu';\r\nimport {ipcRenderer} from 'electron';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Donut', 452, 25.0, 51, 4.9),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n    createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n    createData('KitKat', 518, 26.0, 65, 7.0),\r\n    createData('Lollipop', 392, 0.2, 98, 0.0),\r\n    createData('Marshmallow', 318, 0, 81, 2.0),\r\n    createData('Nougat', 360, 19.0, 9, 37.0),\r\n    createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction desc(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = cmp(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headRows = [\r\n    { id: 'addr', numeric: false, disablePadding: false, label: 'Address' },\r\n    { id: 'user_agent', numeric: false, disablePadding: false, label: 'User Agent' },\r\n    { id: 'direction', numeric: true, disablePadding: false, label: 'Direction' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = property => event => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headRows.map(row => (\r\n                    <TableCell\r\n                        key={row.id}\r\n                        align={row.numeric ? 'right' : 'left'}\r\n                        padding={row.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === row.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === row.id}\r\n                            direction={order}\r\n                            onClick={createSortHandler(row.id)}\r\n                        >\r\n                            {row.label}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.string.isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    spacer: {\r\n        flex: '1 1 100%',\r\n    },\r\n    actions: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    title: {\r\n        flex: '0 0 auto',\r\n    },\r\n}));\r\n\r\nconst styles = theme => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  actionIcon: {\r\n    padding: 2 * theme.spacing.unit,\r\n    textAlign: 'center'\r\n  },\r\n  send: {\r\n    padding: theme.spacing.unit,\r\n    textAlign: 'left',\r\n  },\r\n  receive: {\r\n    padding: theme.spacing.unit,\r\n    textAlign: 'right',\r\n  }\r\n});\r\n\r\nfunction Peers(props) {\r\n    const [refreshPeers, setRefreshPeers] = React.useState(false);\r\n\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [dense, setDense] = React.useState(false);\r\n\r\n\r\n    const EnhancedTableToolbar = props => {\r\n        const classes = useToolbarStyles();\r\n        const { numSelected } = props;\r\n\r\n        return (\r\n            <Toolbar className={classes.root}>\r\n                <div className={classes.title}>\r\n                    <Typography variant=\"h5\" id=\"tableTitle\">\r\n                        Connected Peers\r\n                    <IconButton onClick={function () { setRefreshPeers(!refreshPeers) }}>\r\n                            <RefreshIcon />\r\n                        </IconButton>\r\n                    </Typography>\r\n                </div>\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    function handleRequestSort(event, property) {\r\n        const isDesc = orderBy === property && order === 'desc';\r\n        setOrder(isDesc ? 'asc' : 'desc');\r\n        setOrderBy(property);\r\n    }\r\n\r\n    function handleClick(event, name) {\r\n    }\r\n\r\n    const { classes } = props;\r\n\r\n    var peers = ipcRenderer.sendSync('GetConnectedPeers').peers;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <SideMenu pageName='Peers'/>\r\n            <br />\r\n            <Grid container spacing={1} style={{ maxHeight: 'calc(100vh - 120px)', overflow: 'auto' }} className={classes.root}>\r\n                <Grid item xs={2} />\r\n                <Grid item xs={8}>\r\n                    <EnhancedTableToolbar />\r\n                    <div className={classes.tableWrapper}>\r\n                        <Table\r\n                            className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size={dense ? 'small' : 'medium'}\r\n                        >\r\n                            <EnhancedTableHead\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={peers.length}\r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(peers, getSorting(order, orderBy))\r\n                                    .map((row, index) => {\r\n                                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                        return (\r\n                                            <TableRow\r\n                                                hover\r\n                                                onClick={event => handleClick(event, row.name)}\r\n                                                role='hover'\r\n                                                tabIndex={-1}\r\n                                                key={row.addr}\r\n                                            >\r\n                                                <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                    {row.addr}\r\n                                                </TableCell>\r\n                                                <TableCell>{row.user_agent}</TableCell>\r\n                                                <TableCell align=\"right\">{row.direction}</TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={2} />\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nPeers.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Peers);\r\n","import Peers from './Peers';\r\n\r\nexport default Peers;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Divider, Grid, Tooltip, Typography, IconButton } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SideMenu from '../../components/SideMenu';\r\nimport { ipcRenderer, clipboard } from 'electron';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport CopyIcon from '@material-ui/icons/FileCopy';\r\nimport log from 'electron-log';\r\nimport GrinUtil from \"../../util/GrinUtil.js\";\r\n\r\nconst styles = theme => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  actionIcon: {\r\n    padding: 2 * theme.spacing.unit,\r\n    textAlign: 'center'\r\n  },\r\n  send: {\r\n    padding: theme.spacing.unit,\r\n    textAlign: 'left',\r\n  },\r\n  receive: {\r\n    padding: theme.spacing.unit,\r\n    textAlign: 'right',\r\n  }\r\n});\r\n\r\nclass Outputs extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            outputs: [],\r\n            showSpent: false,\r\n            showCanceled: false\r\n        };\r\n\r\n        this.onOutputsResponse = this.onOutputsResponse.bind(this);\r\n        this.updateOutputs = this.updateOutputs.bind(this);\r\n    }\r\n\r\n    onOutputsResponse(event, statusCode, newOutputs) {\r\n        if (statusCode == 200) {\r\n            this.setState({\r\n                outputs: newOutputs\r\n            });\r\n        } else {\r\n            log.error(\"GetOutputs::Response returned result \" + statusCode);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ipcRenderer.removeAllListeners('GetOutputs::Response');\r\n        ipcRenderer.on('GetOutputs::Response', this.onOutputsResponse);\r\n\r\n        ipcRenderer.send('GetOutputs', this.state.showSpent, this.state.showCanceled);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.showSpent != prevState.showSpent || this.state.showCanceled != prevState.showCanceled) {\r\n            ipcRenderer.send('GetOutputs', this.state.showSpent, this.state.showCanceled);\r\n        }\r\n    }\r\n\r\n    updateOutputs() {\r\n        ipcRenderer.send('GetOutputs', this.state.showSpent, this.state.showCanceled);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        var outputRows = this.state.outputs.map(function (output) {\r\n            // TODO: Need info dialog to show transaction_id, mmr_index, and block_height (all optional). Also should show keychain_path.\r\n            return (\r\n                <React.Fragment key={output.commitment}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={7}>\r\n                            <Tooltip title=\"Commitment\" aria-label={output.commitment}>\r\n                                <Typography variant='body1'>\r\n                                    {output.commitment.substring(0, 20) + \"...\" + output.commitment.substring(46)}\r\n                                    <IconButton onClick={() => { clipboard.writeText(output.commitment) }} style={{ padding: '5px' }}>\r\n                                        <CopyIcon fontSize='small' />\r\n                                    </IconButton>\r\n                                </Typography>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Typography variant='body1' align=\"right\">\r\n                                {GrinUtil.FormatAmount(output.amount)}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <Typography variant='body1' align=\"right\">\r\n                                {output.status}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider variant=\"fullWidth\" />\r\n                </React.Fragment>\r\n            );\r\n        })\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <SideMenu pageName='Outputs' />\r\n                <br />\r\n                <Grid container spacing={8} style={{ maxHeight: 'calc(100vh - 120px)', overflow: 'auto' }} className={classes.root}>\r\n                    <Grid item xs={2} />\r\n                    <Grid item xs={4} style={{ paddingBottom: '0px' }}>\r\n                        <Typography variant='h5'>Outputs\r\n                            <Button onClick={(event) => { this.setState({ showCanceled: !this.state.showCanceled }); }} style={{ marginBottom: '7px' }}>\r\n                                ({this.state.showCanceled ? 'Hide' : 'Show'} Canceled)\r\n                            </Button>\r\n                            <Button onClick={(event) => { this.setState({ showSpent: !this.state.showSpent }); }} style={{ marginBottom: '7px' }}>\r\n                                ({this.state.showSpent ? 'Hide' : 'Show'} Spent)\r\n                            </Button>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} style={{ paddingBottom: '0px' }}>\r\n                        <div align='right'>\r\n                            <br />\r\n                            <Button onClick={this.updateOutputs} >\r\n                                <RefreshIcon /> Refresh\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                    </Grid>\r\n                    <Grid item xs={2} />\r\n                    <Grid item xs={8} style={{ paddingTop: '0px' }}>\r\n                        <Divider variant=\"fullWidth\" />\r\n                        {outputRows}\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nOutputs.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Outputs);\r\n","import Outputs from './Outputs';\r\n\r\nexport default Outputs;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SideMenu from '../../components/SideMenu';\r\nimport {ipcRenderer} from 'electron';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nconst styles = theme => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  actionIcon: {\r\n    padding: 2 * theme.spacing.unit,\r\n    textAlign: 'center'\r\n  },\r\n  send: {\r\n    padding: theme.spacing.unit,\r\n    textAlign: 'left',\r\n  },\r\n  receive: {\r\n    padding: theme.spacing.unit,\r\n    textAlign: 'right',\r\n  }\r\n});\r\n\r\nfunction Advanced(props) {\r\n    const [refreshPeers, setRefreshPeers] = React.useState(false);\r\n\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <SideMenu pageName='Advanced'/>\r\n            <br />\r\n            {/* CONSOLE */}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nAdvanced.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Advanced);\r\n","import Advanced from './Advanced';\r\n\r\nexport default Advanced;\r\n","import React from 'react'\r\nimport { Route, HashRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\nimport ScrollToTop from './util/ScrollTop'\r\nimport Login from './containers/Login';\r\nimport Register from './containers/Register';\r\nimport Restore from './containers/Restore';\r\nimport Main from './containers/Main';\r\nimport Wallet from './containers/Wallet';\r\nimport Peers from './containers/Peers';\r\nimport Outputs from './containers/Outputs';\r\nimport Advanced from './containers/Advanced';\r\n\r\nfunction Routes(props) {\r\n  const isDarkMode = props.isDarkMode;\r\n  return (\r\n    <Router>\r\n      <ScrollToTop>\r\n        <Switch>\r\n            <Route exact path='/' render={(props) => <Main dark_mode={isDarkMode} />} />\r\n            <Route exact path='/login' component={ Login } />\r\n            <Route exact path='/register' component={ Register } />\r\n            <Route exact path='/restore' component={ Restore } />\r\n            <Route exact path='/wallet' component={Wallet} />\r\n            <Route exact path='/peers' component={Peers} />\r\n            <Route exact path='/outputs' component={Outputs} />\r\n            <Route exact path='/advanced' component={Advanced} />\r\n        </Switch>\r\n      </ScrollToTop>\r\n    </Router>\r\n  );\r\n}\r\n\r\nRoutes.propTypes = {\r\n    dark_mode: PropTypes.bool,\r\n}\r\n\r\nexport default(Routes);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ipcRenderer } from 'electron';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport StatusIcon from \"@material-ui/icons/Lens\";\r\nimport { red, orange } from \"@material-ui/core/colors\";\r\nimport {\r\n    MuiThemeProvider, createMuiTheme, Typography, Grid, IconButton\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        height: 30,\r\n        bottom: 0,\r\n    },\r\n    Grid: {\r\n        marginTop: '-26px',\r\n        height: '28px'\r\n    },\r\n    status: {\r\n        marginLeft: '-15px',\r\n        marginTop: '-14px',\r\n    },\r\n    statusText: {\r\n        paddingLeft: '4px',\r\n    },\r\n    connections: {\r\n        paddingLeft: '8px'\r\n    },\r\n    chainHeight: {\r\n        paddingLeft: '12px'\r\n    }\r\n});\r\n\r\nclass StatusBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            status: \"\",\r\n            inbound: 0,\r\n            outbound: 0,\r\n            headerHeight: 0,\r\n            blockHeight: 0,\r\n            networkHeight: 0,\r\n            downloaded: 0,\r\n            totalSize: 0,\r\n            processed: 0\r\n        };\r\n        this.updateStatus = this.updateStatus.bind(this);\r\n    }\r\n\r\n    updateStatus(event, status, inbound, outbound, headerHeight, blockHeight, networkHeight, downloaded, totalSize, processed) {\r\n        global.FULLY_SYNCED = (status == 'FULLY_SYNCED');\r\n        global.BLOCK_HEIGHT = blockHeight;\r\n\r\n        this.setState({\r\n            status: status,\r\n            inbound: inbound,\r\n            outbound: outbound,\r\n            headerHeight: headerHeight,\r\n            blockHeight: blockHeight,\r\n            networkHeight: networkHeight,\r\n            downloaded: downloaded,\r\n            totalSize: totalSize,\r\n            processed: processed\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        ipcRenderer.removeAllListeners(\"NODE_STATUS\");\r\n        ipcRenderer.on(\"NODE_STATUS\", this.updateStatus);\r\n    }\r\n\r\n    render() {\r\n        const { classes, dark_mode } = this.props;\r\n\r\n        const statusTheme = createMuiTheme({\r\n            palette: {\r\n                primary: {\r\n                    main: '#069076',\r\n                },\r\n                secondary: orange,\r\n                error: red,\r\n            },\r\n            typography: {\r\n                useNextVariants: true,\r\n            }\r\n        });\r\n\r\n        const darkStatusTheme = createMuiTheme({\r\n            palette: {\r\n                primary: {\r\n                    main: '#069076',\r\n                },\r\n                secondary: orange,\r\n                error: red,\r\n                text: {\r\n                    primary: '#ffffff',\r\n                    secondary: '#ffffff'\r\n                }\r\n            },\r\n            typography: {\r\n                useNextVariants: true,\r\n            }\r\n        });\r\n\r\n        function getColor(status) {\r\n            if (status.startsWith(\"SYNCING\") || status.endsWith(\"TXHASHSET\")) {\r\n                return \"secondary\";\r\n            } else if (status == \"FULLY_SYNCED\") {\r\n                return \"primary\";\r\n            }\r\n\r\n            return \"error\";\r\n        }\r\n\r\n        function getPercentage(numerator, denominator) {\r\n            if (denominator <= 0) {\r\n                return 0;\r\n            } else {\r\n                return Math.round(100 * (numerator / denominator));\r\n            }\r\n        }\r\n\r\n        function getStatusText(state) {\r\n            const status = state.status;\r\n\r\n            if (status == \"FULLY_SYNCED\") {\r\n                return \"Running\";\r\n            } else if (status == \"SYNCING_HEADERS\") {\r\n                return \"Syncing Headers (\" + getPercentage(state.headerHeight, state.networkHeight) + \"%)\";\r\n            } else if (status == \"SYNCING_BLOCKS\") {\r\n                return \"Syncing Blocks (\" + getPercentage(state.blockHeight, state.headerHeight) + \"%)\";\r\n            } else if (status == \"DOWNLOADING_TXHASHSET\") {\r\n                return \"Downloading State (\" + getPercentage(state.downloaded, state.totalSize) + \"%)\";\r\n            } else if (status == \"PROCESSING_TXHASHSET\") {\r\n                return \"Validating State (\" + state.processed + \"%)\";\r\n            } else {\r\n                return \"Not Connected\";\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <MuiThemeProvider theme={dark_mode ? darkStatusTheme : statusTheme}>\r\n                            <Grid container spacing={0} className={classes.Grid}>\r\n                                <Grid item xs={3}>\r\n                                    <IconButton disabled className={classes.status}>\r\n                                        <StatusIcon color={getColor(this.state.status)} />\r\n                                        <Typography display='inline' color=\"textPrimary\" className={classes.statusText}><b>Status: </b></Typography>\r\n                                        <Typography display='inline' color={getColor(this.state.status)} className={classes.statusText}><b>{getStatusText(this.state)}</b></Typography>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <center>\r\n                                        <Typography display='inline' className={classes.chainHeight}><b>Headers: {this.state.headerHeight}</b></Typography>\r\n                                        <Typography display='inline' className={classes.chainHeight}><b>Blocks: {this.state.blockHeight}</b></Typography>\r\n                                        <Typography display='inline' className={classes.chainHeight}><b>Network: {this.state.networkHeight}</b></Typography>\r\n                                    </center>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <div style={{ textAlign: 'right' }}>\r\n                                        <Typography display='inline' className={classes.connections}><b>Inbound: {this.state.inbound}</b></Typography>\r\n                                        <Typography display='inline' className={classes.connections}><b>Outbound: {this.state.outbound}</b></Typography>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MuiThemeProvider>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStatusBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    dark_mode: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles)(StatusBar);\r\n","import StatusBar from './StatusBar'\r\n\r\nexport default StatusBar;\r\n","import React, { Component } from \"react\";\r\nimport { ipcRenderer } from \"electron\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { grey, yellow, black } from \"@material-ui/core/colors\";\r\nimport Routes from \"./Routes\";\r\nimport StatusBar from './components/StatusBar';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CustomSnackbarContent from \"./components/CustomSnackbarContent\";\r\nimport log from 'electron-log';\r\nconst unhandled = require('electron-unhandled');\r\n\r\nunhandled({\r\n    logger: log.error,\r\n    showDialog: false\r\n});\r\n\r\nconst yellow_theme = createMuiTheme({\r\n    palette: {\r\n        secondary: {\r\n            main: grey[900]\r\n        },\r\n        primary: {\r\n            main: yellow[500]\r\n        }\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            \"Lato\",\r\n            \"sans-serif\"\r\n        ].join(\",\")\r\n    },\r\n    overrides: {\r\n        MuiDialog: {\r\n            paper: {\r\n                backgroundColor: '#DDDDDD',\r\n                border: '#FFEB3B 2px solid'\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst dark_theme = createMuiTheme({\r\n    palette: {\r\n        secondary: {\r\n            main: '#ffffff',\r\n            contrastText: '#ffffff',\r\n        },\r\n        primary: {\r\n            main: '#000000',\r\n            contrastText: '#ffffff',\r\n        },\r\n        text: {\r\n            primary: '#ffffff',\r\n            secondary: '#aaaaaa',\r\n        }\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            \"Lato\",\r\n            \"sans-serif\"\r\n        ].join(\",\"),\r\n        color: '#ffffff',\r\n        initial: {\r\n            color: '#ffffff'\r\n        }\r\n    },\r\n    Input: {\r\n        color: '#000000'\r\n    },\r\n    overrides: {\r\n        MuiDialog: {\r\n            paper: {\r\n                backgroundColor: '#444444',\r\n                border: '#FFEB3B 2px solid'\r\n            }\r\n        },\r\n        MuiInput: {\r\n            root: {\r\n                color: '#000000'\r\n            }\r\n        },\r\n        MuiTypography: {\r\n            root: {\r\n                color: '#ffffff'\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        ipcRenderer.on('Grinbox::Status', (event, status, message) => {\r\n            if (status == \"SUCCESS\") {\r\n                this.setState({\r\n                    snackbarStatus: \"success\",\r\n                    snackbarMessage: message\r\n                });\r\n            } else if (status == \"ERROR\") {\r\n                this.setState({\r\n                    snackbarStatus: \"error\",\r\n                    snackbarMessage: message\r\n                });\r\n            }\r\n        });\r\n\r\n        this.state = {\r\n            isDarkMode: true,\r\n            snackbarMessage: \"\",\r\n            snackbarStatus: \"success\",\r\n        };\r\n\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n    }\r\n\r\n    getBackgroundColor() {\r\n        if (this.state.isDarkMode) {\r\n            return '#444444';\r\n        } else {\r\n            return '#DDDDDD';\r\n        }\r\n    }\r\n\r\n    getTheme() {\r\n        if (this.state.isDarkMode) {\r\n            return (dark_theme);\r\n        } else {\r\n            return (yellow_theme);\r\n        }\r\n    }\r\n\r\n    handleSnackbarClose(event) {\r\n        this.setState({\r\n            snackbarStatus: \"success\",\r\n            snackbarMessage: \"\",\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <style>{'body { background-color: ' + this.getBackgroundColor() + '; }'}</style>\r\n                <MuiThemeProvider theme={this.getTheme()}>\r\n                    <Routes {...this.state} />\r\n                    <Snackbar\r\n                        autoHideDuration={4000}\r\n                        open={this.state.snackbarMessage.length > 0}\r\n                        onClose={this.handleSnackbarClose}\r\n                    >\r\n                        <CustomSnackbarContent\r\n                            onClose={this.handleSnackbarClose}\r\n                            variant={this.state.snackbarStatus}\r\n                            message={this.state.snackbarMessage}\r\n                        />\r\n                    </Snackbar>\r\n                    <StatusBar {...this.state} dark_mode={this.state.isDarkMode} />\r\n                </MuiThemeProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}